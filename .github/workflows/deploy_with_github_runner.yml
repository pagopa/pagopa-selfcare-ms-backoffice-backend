name: Deploy on AKS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      helm_options:
        default: ''
        required: false
        type: string
        description: 'helm upgrade options'
      terraform_options:
        default: ''
        required: false
        type: string
        description: 'terraform upgrade options'
      branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      suffix_name:
        required: false
        default: ''
        type: string
      pr_number:
        required: false
        default: ''
        type: string
      uninstall:
        description: 'true if you want to uninstall instead of install'
        required: false
        type: boolean
        default: false

env:
  APP_NAME: pagopaselfcaremsbackofficebackend


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: [ self-hosted-job, "${{ inputs.environment }}" ]
    name: Deploy on AKS
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy
        if: ${{ inputs.uninstall  == 'false' ||  inputs.uninstall  == false }}
        uses: pagopa/github-actions-template/aks-deploy@main
        with:
          branch: ${{ inputs.branch }}
          client_id: ${{ secrets.CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ inputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}${{inputs.suffix_name}}
          helm_upgrade_options: "--debug --set microservice-chart.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} ${{inputs.helm_options}}"
          timeout: '10m0s'

      - name: Remove deployment
        if: ${{ inputs.uninstall == 'true' ||  inputs.uninstall  == true}}
        shell: bash
        run: |
          helm uninstall ${{ env.APP_NAME }}${{inputs.suffix_name}} -n ${{ vars.NAMESPACE }}

  update_openapi:
    needs: [ deploy ]
    runs-on: ubuntu-latest
    name: Update OpenAPI
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707

      - shell: bash
        if: ${{ inputs.pr_number != '' }}
        run: |
          mv ./infra/04_apim_api_staging.tf.disabled ./infra/04_apim_api_staging.tf 
          echo "pr_number=\"${{ inputs.pr_number }}\"" >> ./infra/env/dev/terraform.tfvars

      - name: Setup Terraform
        # from https://github.com/hashicorp/setup-terraform/commits/main
        uses: hashicorp/setup-terraform@8feba2b913ea459066180f9cb177f58a881cf146
        with:
          terraform_version: "1.10.0"

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}


      - name: Terraform Apply
        shell: bash
        run: |
          cd ./infra
          export ARM_CLIENT_ID="${{ secrets.CLIENT_ID }}"
          export ARM_SUBSCRIPTION_ID=$(az account show --query id --output tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId --output tsv)
          export ARM_USE_OIDC=true
          export ARM_ACCESS_KEY=$(az storage account keys list --resource-group io-infra-rg --account-name pagopainfraterraform${{inputs.environment}} --query '[0].value' -o tsv)
          bash ./terraform.sh init ${{ inputs.environment }}
          bash ./terraform.sh apply ${{ inputs.environment }} ${{inputs.terraform_options}} -auto-approve
