microservice-chart:
  namespace: "selfcare"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-selfcare-ms-backoffice-backend
    tag: "2.17.1-2-next" #improve
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  serviceMonitor:
    create: true
    endpoints:
      - interval: 10s #jmx-exporter
        targetPort: 12345
        path: /metrics
  ports:
    - 80 #http
    - 12345 #jmx-exporter
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "weuprod.selfcare.internal.platform.pagopa.it"
    path: "/selfcare/pagopa/v1/(.*)"
    servicePort: 8080
    annotations:
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://api.platform.pagopa.it"
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.5"
    limits:
      memory: "768Mi"
      cpu: "0.5"
  autoscaling:
    enable: true
    minReplica: 2
    maxReplica: 3
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "70"
  envConfig:
    WEBSITE_SITE_NAME: 'pagopaselfcaremsbackofficebackend'
    EXTERNAL_API_SERVICE_URL: https://api.selfcare.pagopa.it
    PAGOPA_APIM_SERVICE_URL: https://api.platform.pagopa.it
    PAGOPA_SELFCARE_INTEGRATION_APIM_SERVICE_URL: https://api.platform.pagopa.it
    GEC_SERVICE_URL: https://api.platform.pagopa.it
    FORWARDER_SERVICE_URL: https://api.platform.pagopa.it
    TAXONOMY_SERVICE_URL: https://api.platform.pagopa.it
    AZURE_RESOURCE_GROUP: pagopa-p-api-rg
    AZURE_SERVICE_NAME: pagopa-p-apim
    APPCONFIGURATION_ENDPOINT: 'https://pagopa-p-selfcare-appconfiguration.azconfig.io'
    ENABLE_CONFIDENTIAL_FILTER: 'FALSE'
    MONGODB_NAME: pagopaBackoffice
    AUTHORIZATION_FLAG: 'false'
    ENV: 'PROD'
    REST_CLIENT_LOGGER_LEVEL: 'NONE'
    AWS_REGION: 'eu-south-1'
    OTEL_SERVICE_NAME: "pagopa-selfcare-backoffice-backend"
    OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=prod"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
    CRONJOB_SCHEDULE_ENABLED: 'true'
    CRONJOB_SCHEDULE_TAXONOMYEXPORT: "0 0 7 * * *"
    CRONJOB_SCHEDULE_IBANEXPORT: "0 0 2 * * *"
    CRONJOB_SCHEDULE_CIEXPORT: "0 0 2 * * *"
    EXTRACTION_IBANS_GETBROKERS_LIMIT: '200'
    EXTRACTION_IBANS_GETIBANS_LIMIT: '1000'
    EXTRACTION_IBANS_GETCIBYBROKER_LIMIT: '1000'
    EXTRACTION_IBANS_CLEAN_OLDERTHANDAYS: '7'
    EXTRACTION_IBANS_PERSISTIBANBATCHSIZE: '10000'
    CLIENT_RETRY_MAX_ATTEMPTS: '3'
    CLIENT_RETRY_MAX_DELAY: '2000'
  envSecret:
    AWS_ACCESS_KEY_ID: pagopa-p-aws-access-key-id
    AWS_SECRET_ACCESS_KEY: pagopa-p-aws-secret-access-key
    AWS_SES_USER: pagopa-p-aws-ses-user
    AZURE_CLIENT_SECRET: pagopa-p-selfcare-client-secret
    AZURE_CLIENT_ID: pagopa-p-selfcare-client-id
    AZURE_TENANT_ID: pagopa-selfcare-prod-tenant-id
    AZURE_SUBSCRIPTION_ID: pagopa-selfcare-p-subscription-id
    SELFCARE_APIM_EXTERNAL_API_KEY_PAGOPA: selfcare-p-apim-external-api-key
    PAPGOPA_APIM_GEC_API_KEY_PAGOPA: pagopa-p-apim-gec-key
    PAPGOPA_APIM_GPD_API_KEY_PAGOPA: pagopa-p-apim-gpd-key
    PAPGOPA_APIM_FORWARDER_API_KEY_PAGOPA: pagopa-p-apim-forwarder-key
    PAPGOPA_APIM_TAXONOMY_API_KEY_PAGOPA: pagopa-p-apim-taxonomy-key
    PAGOPA_APIM_API_CONFIG_API_KEY_PAGOPA: pagopa-p-apim-api-config-key
    PAPGOPA_APIM_INSTITUTIONS_API_KEY_PAGOPA: pagopa-p-apim-notices-key
    PAGOPA_APIM_API_CONFIG_SELFCARE_INTEGRATION_API_KEY_PAGOPA: pagopa-p-apim-api-config-selfcare-integration-key
    PAPGOPA_APIM_AUTHORIZER_CONFIG_API_KEY_PAGOPA: pagopa-p-apim-authorizer-config-key
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-p-connection-string'
    JWT_TOKEN_PUBLIC_KEY_PROD: pagopa-p-weu-selfcare-jwt-pub-key
    TEST_EMAIL: pagopa-p-env-test-email
    MONGODB_CONNECTION_URI: cosmodbmongo-p-bopagopa-connection-string
    JIRA_URL: jira-p-url
    JIRA_USERNAME: jira-p-username
    JIRA_PASSWORD: jira-p-token
    JIRA_PROJECT_KEY: jira-p-project-key
    JIRA_REQ_TYPE_TASKID: jira-p-req-task-id
    OTEL_EXPORTER_OTLP_HEADERS: elastic-apm-secret-token
  keyvault:
    name: "pagopa-p-selfcare-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  canaryDelivery:
    create: false
    ingress:
      create: true
      canary:
        type: header
        headerName: X-Canary
        headerValue: canary
        weightPercent: 0
    service:
      create: true
    deployment:
      create: true
      image:
        repository: ghcr.io/pagopa/pagopa-selfcare-ms-backoffice-backend
        tag: 2.14.1-1-hotfix-timout-feign
        pullPolicy: Always
      envConfig: {}
      envSecret: {}
