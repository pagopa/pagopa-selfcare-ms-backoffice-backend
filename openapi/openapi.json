{
  "openapi": "3.0.1",
  "info": {
    "description": "Microservice to manage PagoPA Backoffice",
    "termsOfService": "https://www.pagopa.gov.it/",
    "title": "SelfCare Backoffice",
    "version": "2.38.4"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://{host}{basePath}",
      "variables": {
        "basePath": {
          "default": "/backoffice/v1"
        },
        "host": {
          "default": "api.dev.platform.pagopa.it",
          "enum": [
            "api.dev.platform.pagopa.it",
            "api.uat.platform.pagopa.it",
            "api.platform.pagopa.it"
          ]
        }
      }
    }
  ],
  "paths": {
    "/brokers": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBrokersEC",
        "parameters": [
          {
            "description": "Number of elements on one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "order by name or code, default = CODE",
            "in": "query",
            "name": "orderby",
            "required": false,
            "schema": {
              "type": "string",
              "default": "CODE"
            }
          },
          {
            "in": "query",
            "name": "ordering",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokersResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of creditor brokers",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createBroker_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrokerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a Broker",
        "tags": [
          "Creditor institution's Brokers"
        ]
      }
    },
    "/brokers/{broker-tax-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deleteCIBroker",
        "parameters": [
          {
            "description": "Broker tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Deletes the Creditor Institution's broker",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updateBroker",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrokerEcDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update an existing EC broker",
        "tags": [
          "Creditor institution's Brokers"
        ]
      }
    },
    "/brokers/{broker-tax-code}/creditor-institutions/export": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | Y\nThe CSV file contains the following columns: `companyName, taxCode, intermediated, brokerCompanyName, brokerTaxCode, model, auxDigit, segregationCode, applicationCode, cbillCode, stationId, stationState, activationDate, version, broadcast`",
        "operationId": "exportCreditorInstitutionToCsv",
        "parameters": [
          {
            "description": "SelfCare Broker Code. it's a tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Export all creditor institutions handled by a broker EC to CSV",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/creditor-institutions/{ci-tax-code}/stations": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getCIBrokerStations",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Station identifier, used for filtering results",
            "in": "query",
            "name": "stationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBrokerStationPage"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieve all broker's station associated with the given creditor institution",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/delegations": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getCIBrokerDelegation",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's unique id",
            "in": "query",
            "name": "brokerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's name, used for filtering results",
            "in": "query",
            "name": "ciName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBrokerDelegationPage"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieve all delegations for given ci broker",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/export-status": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBrokerExportStatus",
        "parameters": [
          {
            "description": "SelfCare Broker Code. it's a tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerECExportStatus"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get all info about data exports for the broker EC",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/ibans/export": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | Y\nThe CSV file contains the following columns: `denominazioneEnte, codiceFiscale, iban, stato, dataAttivazioneIban, descrizione, etichetta`",
        "operationId": "exportIbansToCsv",
        "parameters": [
          {
            "description": "SelfCare Broker Code. it's a tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Export all IBANs of all creditor institutions handled by a broker EC to CSV",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/station-maintenances": {
      "get": {
        "operationId": "getStationMaintenances",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Station's code",
            "in": "query",
            "name": "stationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maintenances' state",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SCHEDULED_AND_IN_PROGRESS",
                "SCHEDULED",
                "IN_PROGRESS",
                "FINISHED"
              ]
            }
          },
          {
            "description": "Maintenance's starting year",
            "in": "query",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Number of items for page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationMaintenanceListResource"
                }
              }
            },
            "description": "Ok",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of station's maintenance for the specified broker",
        "tags": [
          "Station Maintenance"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createStationMaintenance",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStationMaintenance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationMaintenanceResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Schedule a maintenance period for a Station",
        "tags": [
          "Station Maintenance"
        ]
      }
    },
    "/brokers/{broker-tax-code}/station-maintenances/summary": {
      "get": {
        "operationId": "getBrokerMaintenancesSummary",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Year of maintenance (yyyy)",
            "example": 2024,
            "in": "query",
            "name": "maintenanceYear",
            "required": true,
            "schema": {
              "maxLength": 4,
              "minLength": 4,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceHoursSummaryResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the hours' summary of stations' maintenance for the specified broker",
        "tags": [
          "Station Maintenance"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/brokers/{broker-tax-code}/station-maintenances/{maintenance-id}": {
      "delete": {
        "operationId": "deleteStationMaintenance",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maintenance's id",
            "in": "path",
            "name": "maintenance-id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a station's maintenance",
        "tags": [
          "Station Maintenance"
        ]
      },
      "get": {
        "operationId": "getStationMaintenance",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maintenance's id",
            "in": "path",
            "name": "maintenance-id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationMaintenanceResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a maintenance for the specified station, given its broker code and maintenance id",
        "tags": [
          "Station Maintenance"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updateStationMaintenance",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maintenance's id",
            "in": "path",
            "name": "maintenance-id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStationMaintenance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationMaintenanceResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a scheduled maintenance for the specified station",
        "tags": [
          "Station Maintenance"
        ]
      }
    },
    "/brokers/{broker-tax-code}/station-maintenances/{maintenance-id}/finish": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "finishStationMaintenance",
        "parameters": [
          {
            "description": "Broker's tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Maintenance's id",
            "in": "path",
            "name": "maintenance-id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Finish an in progress station's maintenance",
        "tags": [
          "Station Maintenance"
        ]
      }
    },
    "/brokers/{broker-tax-code}/stations": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getStationsDetailsListByBroker",
        "parameters": [
          {
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "stationId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailsResourceList"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of stations given a broker code",
        "tags": [
          "Creditor institution's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/creditor-institutions": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getCisBundles",
        "parameters": [
          {
            "description": "Commission bundle's type",
            "in": "query",
            "name": "bundleType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GLOBAL",
                "PUBLIC",
                "PRIVATE"
              ]
            }
          },
          {
            "description": "Bundle subscription status, required in case of private bundle otherwise is not considered",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "WAITING",
                "ACCEPTED"
              ]
            }
          },
          {
            "description": "Creditor institution's tax code, required in case of public/private bundle, otherwise is optional and used to filter the results",
            "in": "query",
            "name": "ciTaxCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's name, used to filter out results",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements in one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBundlesResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of bundles to be used by creditor institutions",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/creditor-institutions/{ci-tax-code}/offers/{id-bundle-offer}/accept": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "acceptPrivateBundleOffer",
        "parameters": [
          {
            "description": "Tax code of the creditor institution",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle offer's id",
            "in": "path",
            "name": "id-bundle-offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code for email notification",
            "in": "query",
            "name": "pspTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CIBundleAttributeResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBundleId"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Accept a private bundle offer by bundle offer id and ci tax code",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/creditor-institutions/{ci-tax-code}/offers/{id-bundle-offer}/reject": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "rejectPrivateBundleOffer",
        "parameters": [
          {
            "description": "Tax code of the creditor institution",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle offer's id",
            "in": "path",
            "name": "id-bundle-offer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code for email notification",
            "in": "query",
            "name": "pspTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Reject a private bundle offer by bundle offer id and ci tax code",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/creditor-institutions/{ci-tax-code}/requests": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createCIBundleRequest",
        "parameters": [
          {
            "description": "Creditor Institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name, if present sends an email to notify the Payment Service Provider",
            "in": "query",
            "name": "bundleName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicBundleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a creditor institution's subscription request to a public bundle",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/creditor-institutions/{ci-tax-code}/requests/{bundle-request-id}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "deleteCIBundleRequest",
        "parameters": [
          {
            "description": "Subscription request's id of a creditor institution to a bundle",
            "in": "path",
            "name": "bundle-request-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor Institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a creditor institution's subscription request to a public bundle",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/payment-service-providers/{psp-tax-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBundlesByPSP",
        "parameters": [
          {
            "description": "Number of elements on one page. Default = 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Commission bundle's type",
            "in": "query",
            "name": "bundle-type",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GLOBAL",
                  "PUBLIC",
                  "PRIVATE"
                ]
              }
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order bundles by maxPaymentAmount",
            "example": "ASC",
            "in": "query",
            "name": "maxPaymentAmountOrder",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "description": "Filter bundles with paymentAmount less than",
            "in": "query",
            "name": "paymentAmountMinRange",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Filter bundles with paymentAmount more than",
            "in": "query",
            "name": "paymentAmountMaxRange",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Validity date of bundles, used to retrieve all bundles valid before the specified date (yyyy-MM-dd)",
            "example": "2024-05-10",
            "in": "query",
            "name": "validBefore",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Validity date of bundles, used to retrieve all bundles valid after the specified date (yyyy-MM-dd)",
            "example": "2024-05-10",
            "in": "query",
            "name": "validAfter",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Validity date of bundles, used to retrieve all bundles that expire before the specified date (yyyy-MM-dd)",
            "example": "2024-05-10",
            "in": "query",
            "name": "expireBefore",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Validity date of bundles, used to retrieve all bundles that expire after the specified date (yyyy-MM-dd)",
            "example": "2024-05-10",
            "in": "query",
            "name": "expireAfter",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PSPBundlesResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of bundles related to PSP",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createBundle",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleCreateResponse"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a commission bundle related to PSP",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/payment-service-providers/{psp-tax-code}/export": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | Y\n",
        "operationId": "exportPSPBundleList",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's type",
            "in": "query",
            "name": "bundleTypeList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GLOBAL",
                  "PUBLIC",
                  "PRIVATE"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Export all commission bundle related to a PSP",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/payment-service-providers/{psp-tax-code}/requests/{bundle-request-id}/accept": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "acceptPublicBundleSubscriptions",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public bundle request's id",
            "in": "path",
            "name": "bundle-request-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code for email notification",
            "in": "query",
            "name": "ciTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Accept a subscription to a public bundle of a PSP",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/payment-service-providers/{psp-tax-code}/requests/{bundle-request-id}/reject": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "rejectPublicBundleSubscription",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public bundle request's id",
            "in": "path",
            "name": "bundle-request-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code for email notification",
            "in": "query",
            "name": "ciTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "reject of subscription to a public bundle of a PSP",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/payment-types": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBundlesPaymentTypes",
        "parameters": [
          {
            "description": "Number of elements on one page. Default = 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundlePaymentTypes"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of payment types",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/touchpoints": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getTouchpoints",
        "parameters": [
          {
            "description": "Number of elements on one page. Default = 10",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Touchpoints"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of touchpoints",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/{ci-bundle-id}/creditor-institutions/{ci-tax-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "deleteCIBundleSubscription",
        "parameters": [
          {
            "description": "Subscription's id of a creditor institution to a bundle",
            "in": "path",
            "name": "ci-bundle-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor Institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name, if present sends an email to notify the Creditor Institution",
            "in": "query",
            "name": "bundleName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a creditor institution's subscription to a public/private bundle",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/{id-bundle}/payment-service-providers/{psp-tax-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "deletePSPBundle",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's name for email notification",
            "in": "query",
            "name": "pspName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's type for email notification",
            "in": "query",
            "name": "bundleType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "GLOBAL",
                "PUBLIC",
                "PRIVATE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a bundle by psp code and bundle id",
        "tags": [
          "Commission bundles"
        ]
      },
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBundleDetailByPSP",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PSPBundleResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a bundle by psp code and bundle id",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updatePSPBundle",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a bundle by psp code and bundle id",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/{id-bundle}/payment-service-providers/{psp-tax-code}/offers": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createCIBundleOffers",
        "parameters": [
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CiTaxCodeList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a creditor institution's subscription offer to a private bundle",
        "tags": [
          "Commission bundles"
        ]
      }
    },
    "/bundles/{id-bundle}/payment-service-providers/{psp-tax-code}/offers/{bundle-offer-id}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deletePrivateBundleOffer",
        "parameters": [
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Id of the private bundle offer",
            "in": "path",
            "name": "bundle-offer-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code for email notification",
            "in": "query",
            "name": "ciTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Bundle's name for email notification",
            "in": "query",
            "name": "bundleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete private bundle offer",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/{id-bundle}/payment-service-providers/{psp-tax-code}/subscriptions": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBundleCISubscriptions",
        "parameters": [
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's type (Required only for subscription with status WAITING",
            "in": "query",
            "name": "bundleType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GLOBAL",
                "PUBLIC",
                "PRIVATE"
              ]
            }
          },
          {
            "description": "Subscription status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "WAITING",
                "ACCEPTED"
              ]
            }
          },
          {
            "description": "Creditor Institution's tax code, used for filtering results",
            "in": "query",
            "name": "ciTaxCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements in one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBundleSubscriptionsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of creditor institution's subscriptions to a public/private bundle of a PSP",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/bundles/{id-bundle}/payment-service-providers/{psp-tax-code}/subscriptions/{ci-tax-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBundleCISubscriptionsDetail",
        "parameters": [
          {
            "description": "Commission bundle's id",
            "in": "path",
            "name": "id-bundle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment Service Provider's tax code",
            "in": "path",
            "name": "psp-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Commission bundle's type (Required only for subscription with status WAITING",
            "in": "query",
            "name": "bundleType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GLOBAL",
                "PUBLIC",
                "PRIVATE"
              ]
            }
          },
          {
            "description": "Subscription status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "WAITING",
                "ACCEPTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CIBundleSubscriptionsDetail"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the detail of a creditor institution's subscription to a public/private bundle of a PSP",
        "tags": [
          "Commission bundles"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/channels": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getChannels",
        "parameters": [
          {
            "description": "Channel's status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "TO_BE_VALIDATED"
              ]
            }
          },
          {
            "description": "Channel's 'code, to filter out result",
            "in": "query",
            "name": "channelCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker code, to filter out result",
            "in": "query",
            "name": "brokerCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements on one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrapperChannelsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of channels",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createChannel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a channel, validating the creation request previously inserted by user",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/csv": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getChannelsCSV",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Download the list of channels as CSV file",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/channels/wrapper": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createWrapperChannelDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WrapperChannelDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrapperEntities"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Request the creation of a channel that will be validated by an operator",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/wrapper/{channel-code}": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateWrapperChannelDetails",
        "parameters": [
          {
            "description": "Channel's code",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Request the update of a channel that will be validated by an operator",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/wrapper/{channel-code}/operator": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateWrapperChannelWithOperatorReview",
        "parameters": [
          {
            "description": "Channel's code",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker Code related to the channel",
            "in": "query",
            "name": "brokerPspCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorChannelReview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a WrapperChannel with Operator review",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/{channel-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deleteChannel",
        "parameters": [
          {
            "description": "Code of the payment channel",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "delete channel",
        "tags": [
          "Channels"
        ]
      },
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getChannelDetails",
        "parameters": [
          {
            "description": "Channel's code",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Channel's status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "TO_BE_VALIDATED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get channel's details",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updateChannel",
        "parameters": [
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a channel, validating the update request previously inserted by user",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/{channel-code}/payment-service-providers": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getChannelPaymentServiceProviders",
        "parameters": [
          {
            "description": "Code of the payment channel",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by PSP name",
            "in": "query",
            "name": "psp-name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements on one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelPspListResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of PSPs associated with the channel",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/channels/{channel-code}/payment-types": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getChannelPaymentTypes",
        "parameters": [
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get list of payment type of a channel",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createChannelPaymentType",
        "parameters": [
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PspChannelPaymentTypes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a payment types of a channel",
        "tags": [
          "Channels"
        ]
      }
    },
    "/channels/{channel-code}/payment-types/{payment-type-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deleteChannelPaymentType",
        "parameters": [
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Code of the payment type",
            "in": "path",
            "name": "payment-type-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "delete payment type of a channel",
        "tags": [
          "Channels"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/configurations/payment-types": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getPaymentTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTypes"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get list of payment type",
        "tags": [
          "Configuration"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/configurations/wfesp-plugins": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getWfespPlugins",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WfespPluginConfs"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a WrapperChannel on Cosmodb",
        "tags": [
          "Configuration"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/configurations/wrapper/{wrapper-type}/status/{wrapper-status}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getWrapperByTypeAndStatus",
        "parameters": [
          {
            "description": "Type of Wrapper like CHANNEL or STATION",
            "in": "path",
            "name": "wrapper-type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CHANNEL",
                "STATION"
              ]
            }
          },
          {
            "description": "Validation Status of a CHANNEL or STATION",
            "in": "path",
            "name": "wrapper-status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPROVED",
                "TO_CHECK",
                "TO_FIX",
                "TO_CHECK_UPDATE",
                "TO_FIX_UPDATE"
              ]
            }
          },
          {
            "description": "Number of elements on one page. Default = 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Broker code filter for search",
            "in": "query",
            "name": "broker-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query with sql like parameter for field id search",
            "in": "query",
            "name": "id-like",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Method of sorting",
            "in": "query",
            "name": "sorting",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrapperEntitiesList"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get Wrapper Channel Details from cosmos db",
        "tags": [
          "Configuration"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/creditor-institutions": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getCreditorInstitutions",
        "parameters": [
          {
            "description": "Creditor institution's tax code, used to filter out results",
            "in": "query",
            "name": "ciTaxCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's name, used to filter out results",
            "in": "query",
            "name": "ciName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flag that describe if the creditor institution is enabled, used to filter out results",
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order by creditor institution's tax code or business name",
            "in": "query",
            "name": "orderBy",
            "required": false,
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "CODE",
                "NAME"
              ]
            }
          },
          {
            "description": "Sorting method for paginated result",
            "in": "query",
            "name": "sorting",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "description": "Number of elements on one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of creditor institutions",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createCreditorInstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditorInstitutionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionDetailsResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a new creditor institution",
        "tags": [
          "Creditor institutions"
        ]
      }
    },
    "/creditor-institutions/stations/{station-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getAvailableCreditorInstitutionsForStation",
        "parameters": [
          {
            "description": "Station's code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's unique id",
            "in": "query",
            "name": "brokerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's name, used to filter out results",
            "in": "query",
            "name": "ciName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionInfoResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the list of Creditor Institutions that can be associated to the station",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/creditor-institutions/{ci-code}/ibans": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getCreditorInstitutionIbans",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Label to be used as search filter for associated IBANs",
            "in": "query",
            "name": "labelName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ibans"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get all IBANs related to creditor institution, filtering by specific label",
        "tags": [
          "Ibans"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createCreditorInstitutionIbans",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IbanCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Iban"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create an IBAN owned by creditor institution",
        "tags": [
          "Ibans"
        ]
      }
    },
    "/creditor-institutions/{ci-code}/ibans/{iban-value}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deleteCreditorInstitutionIbans",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IBAN identification value",
            "in": "path",
            "name": "iban-value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a specific IBAN owned by creditor institution",
        "tags": [
          "Ibans"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateCreditorInstitutionIbans",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IBAN identification value",
            "in": "path",
            "name": "iban-value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IbanCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Iban"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a specific IBAN owned by creditor institution",
        "tags": [
          "Ibans"
        ]
      }
    },
    "/creditor-institutions/{ci-tax-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getCreditorInstitutionDetails",
        "parameters": [
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the detail of specific creditor institution",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateCreditorInstitutionDetails",
        "parameters": [
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditorInstitutionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update an existing creditor institution",
        "tags": [
          "Creditor institutions"
        ]
      }
    },
    "/creditor-institutions/{ci-tax-code}/contacts": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getCreditorInstitutionContacts",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Institution's identifier",
            "in": "query",
            "name": "institutionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionContactsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get creditor institution's payment contacts and operative table",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/creditor-institutions/{ci-tax-code}/full": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getBrokerAndEcDetails",
        "parameters": [
          {
            "description": "Broker's tax code of an EC",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerAndEcDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get PSP broker details",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createCreditorInstitutionAndBroker",
        "parameters": [
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditorInstitutionAndBrokerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionDetailsResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a new creditor institution that can intermediate as a broker",
        "tags": [
          "Creditor institutions"
        ]
      }
    },
    "/creditor-institutions/{ci-tax-code}/segregation-codes": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getCreditorInstitutionSegregationCodes",
        "parameters": [
          {
            "description": "Creditor institution's tax code that own the station",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tax code of the creditor institution that will be associated to the station",
            "in": "query",
            "name": "targetCITaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableCodes"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the available creditor institution's segregation code",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/creditor-institutions/{ci-tax-code}/station": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "associateStationToCreditorInstitution",
        "parameters": [
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's institution id",
            "in": "query",
            "name": "institutionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's tax code",
            "in": "query",
            "name": "brokerTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditorInstitutionStationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionStationEditResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Creates the relationship between the created station and the creditorInstitution",
        "tags": [
          "Creditor institutions"
        ]
      },
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateStationAssociationToCreditorInstitution",
        "parameters": [
          {
            "description": "Creditor institution's tax code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditorInstitutionStationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionStationEditResource"
                }
              }
            },
            "description": "Updated",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Conflict",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Updates the relationship between the created station and the creditorInstitution",
        "tags": [
          "Creditor institutions"
        ]
      }
    },
    "/creditor-institutions/{ci-tax-code}/station/{station-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deleteCreditorInstitutionStationRelationship",
        "parameters": [
          {
            "description": "Creditor institution's code",
            "in": "path",
            "name": "ci-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's institution id",
            "in": "query",
            "name": "institutionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's tax code",
            "in": "query",
            "name": "brokerTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Station's code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "content": {
              "application/json": {}
            },
            "description": "No content",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "delete the relationship between the created station and the creditorInstitution",
        "tags": [
          "Creditor institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/flags": {
      "get": {
        "description": "Return a map with all feature flags",
        "operationId": "getFeatureFlags",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlags"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Return all Azure Feature Flags",
        "tags": [
          "Home"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/flags/{name}": {
      "get": {
        "description": "Return the value of the flag given the name",
        "operationId": "getFeatureFlag",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Return an Azure Feature Flag",
        "tags": [
          "Home"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/info": {
      "get": {
        "description": "Return OK if application is started",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "health check",
        "tags": [
          "Home"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/institutions": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getInstitutions",
        "parameters": [
          {
            "description": "filter by the tax code of the Creditor Institution",
            "in": "query",
            "name": "tax-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionBaseResources"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieves all the onboarded institutions related to the logged user",
        "tags": [
          "Institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/institutions/delegations": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getBrokerDelegation",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "query",
            "name": "institution-id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's unique id",
            "in": "query",
            "name": "brokerId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's role to consider when filtering institution types",
            "in": "query",
            "name": "roles",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CI",
                  "PSP",
                  "PT",
                  "OTHER"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelegationResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieve all active delegations for given institution broker and logged user",
        "tags": [
          "Institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/institutions/{institution-id}/api-keys": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getInstitutionApiKeys",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionApiKeysResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieve an institution's key pair, including primary and secondary keys",
        "tags": [
          "Institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createInstitutionApiKeys",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Subscription's unique internal identifier",
            "in": "query",
            "name": "subscription-code",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NODOAUTH",
                "GPD",
                "GPD_REP",
                "GPD_PAY",
                "BIZ",
                "FDR_ORG",
                "FDR_PSP",
                "QI_FDR_KPI",
                "BO_EXT_EC",
                "BO_EXT_PSP",
                "PRINT_NOTICE",
                "ACA"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionApiKeysResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Creates a new subscription for a given Institution and returns its primary and secondary keys",
        "tags": [
          "Institutions"
        ]
      }
    },
    "/institutions/{institution-id}/api-keys/{subscription-id}/primary/regenerate": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "regeneratePrimaryKey",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Institution's subscription id",
            "in": "path",
            "name": "subscription-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Regenerates the subscription's primary key",
        "tags": [
          "Institutions"
        ]
      }
    },
    "/institutions/{institution-id}/api-keys/{subscription-id}/secondary/regenerate": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "regenerateSecondaryKey",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Institution's subscription id",
            "in": "path",
            "name": "subscription-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Regenerates the subscription's secondary key",
        "tags": [
          "Institutions"
        ]
      }
    },
    "/institutions/{institution-id}/full-detail": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getInstitutionFullDetail",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionDetail"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieves the full detail of an institution",
        "tags": [
          "Institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/institutions/{institution-id}/products": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getInstitutionProducts",
        "parameters": [
          {
            "description": "Institution's unique internal identifier",
            "in": "path",
            "name": "institution-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Retrieve all active products for given institution and logged user",
        "tags": [
          "Institutions"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/maintenance/message": {
      "get": {
        "description": "Return the maintenance message for the specific environment",
        "operationId": "getMaintenanceMessage",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceMessage"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Return the maintenance message",
        "tags": [
          "Home"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/notice/institutions/data": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nN | Y | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\nUploads or updates the provided institution data and logo on the related storage, to be used in the payment notice generation process",
        "operationId": "updateInstitutions",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "logo file to upload (not to send on update unless it is changed)"
                  },
                  "institutions-data": {
                    "$ref": "#/components/schemas/InstitutionUploadData"
                  }
                },
                "required": [
                  "institutions-data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "uploadInstitutionData",
        "tags": [
          "Notice APIs"
        ]
      }
    },
    "/notice/institutions/data/{taxCode}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nN | Y | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\nRetrieves saved institution data and logo on the related storage, to be used in the payment notice generation process",
        "operationId": "getInstitutionData",
        "parameters": [
          {
            "description": "tax code of the CI to use for retrieval",
            "in": "path",
            "name": "taxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionUploadData"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "getInstitutionData",
        "tags": [
          "Notice APIs"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/operative-tables": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getOperativeTables",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TavoloOpResourceList"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get All operative tables",
        "tags": [
          "Operative Tables"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "insertOperativeTable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TavoloOpDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TavoloOpOperations"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Insert a new operative table",
        "tags": [
          "Operative Tables"
        ]
      }
    },
    "/operative-tables/{ci-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getOperativeTable",
        "parameters": [
          {
            "description": "Creditor Institution code",
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TavoloOpResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get operative table details",
        "tags": [
          "Operative Tables"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateOperativeTable",
        "parameters": [
          {
            "in": "path",
            "name": "ci-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TavoloOpDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TavoloOpOperations"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update an existent operative table",
        "tags": [
          "Operative Tables"
        ]
      }
    },
    "/payment-service-providers": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getPaymentServiceProviders",
        "parameters": [
          {
            "description": "Number of elements on one page. Default = 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Payment service provider code",
            "in": "query",
            "name": "psp-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Tax Code of the payment service provider",
            "in": "query",
            "name": "tax-code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Payment service provider name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProvidersResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the list of payment service providers",
        "tags": [
          "Payment Service Providers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "createPSP",
        "parameters": [
          {
            "description": "If true the PSP will also be signed up as a broker",
            "in": "query",
            "name": "direct",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentServiceProviderDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProviderDetailsResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a payment service provider",
        "tags": [
          "Payment Service Providers"
        ]
      }
    },
    "/payment-service-providers/{tax-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getBrokerAndPspDetails",
        "parameters": [
          {
            "description": "Tax Code to use for retrieval of the related Code of the payment service provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerOrPspDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get payment service provider's details",
        "tags": [
          "Payment Service Providers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updatePSP",
        "parameters": [
          {
            "description": "Tax code of the Payment Service Provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentServiceProviderDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProviderDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update payment service provider",
        "tags": [
          "Payment Service Providers"
        ]
      }
    },
    "/payment-service-providers/{tax-code}/channels": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getPspChannels",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the channels of the PSP",
        "tags": [
          "Payment Service Providers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/payment-service-providers/{tax-code}/channels/available-code": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getFirstValidChannelCode",
        "parameters": [
          {
            "description": "Tax Code of the payment service provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "is true if the channel is V2",
            "in": "query",
            "name": "v2",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelCodeResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a valid code for the passed PSP that is not used yet for existing channels",
        "tags": [
          "Payment Service Providers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/payment-service-providers/{tax-code}/channels/{channel-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "dissociatePSPFromChannel",
        "parameters": [
          {
            "description": "Tax code of the payment service provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a relation between a PSP and a channel",
        "tags": [
          "Payment Service Providers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Write | N\n",
        "operationId": "updatePaymentServiceProvidersChannels",
        "parameters": [
          {
            "description": "Tax Code to use for retrieval of the related Code of the payment service provider",
            "in": "path",
            "name": "tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Channel's unique identifier",
            "in": "path",
            "name": "channel-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PspChannelPaymentTypes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a relation between a PSP and a channel, using the tax code to find related PSP Code",
        "tags": [
          "Payment Service Providers"
        ]
      }
    },
    "/payments-receipts/{organization-tax-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getPaymentsReceipts",
        "parameters": [
          {
            "description": "Tax code of the organization",
            "in": "path",
            "name": "organization-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "Number of elements on one page. Default = 50",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Filter by debtor tax code",
            "in": "query",
            "name": "debtorTaxCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by date, after this date",
            "in": "query",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by date, before this date",
            "in": "query",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Dynamic filter for both IUV and debtor tax code",
            "in": "query",
            "name": "debtorOrIuv",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentsResult"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of the organization receipts",
        "tags": [
          "Payments Receipts"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/payments-receipts/{organization-tax-code}/detail/{iuv}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getPaymentReceiptDetail",
        "parameters": [
          {
            "description": "Tax code of the organization",
            "in": "path",
            "name": "organization-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Receipt's IUV",
            "in": "path",
            "name": "iuv",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Obtained receipt details.",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the payment receipt's details",
        "tags": [
          "Payments Receipts"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/psp-brokers": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getBrokersPsp",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Broker's code",
            "in": "query",
            "name": "brokerTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order by column name",
            "in": "query",
            "name": "orderby",
            "required": false,
            "schema": {
              "type": "string",
              "default": "CODE"
            }
          },
          {
            "description": "Method of sorting",
            "in": "query",
            "name": "sorting",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokersPspResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the list of all PSP brokers",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createBroker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrokerPspDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerPspDetailsResource"
                }
              }
            },
            "description": "Created",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a new PSP broker",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      }
    },
    "/psp-brokers/{broker-tax-code}": {
      "delete": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "deletePspBroker",
        "parameters": [
          {
            "description": "Broker tax code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Deletes the Payment Service Provider's broker",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      },
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getBrokerPsp",
        "parameters": [
          {
            "description": "Broker's code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerPspDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the detail of a PSP broker",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateBrokerPSP",
        "parameters": [
          {
            "description": "Broker code",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrokerPspDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerPspDetailsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update Broker payment service provider",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      }
    },
    "/psp-brokers/{broker-tax-code}/channels": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getChannelListByBroker",
        "parameters": [
          {
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "channelId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResourceList"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of PSP channels by given broker",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/psp-brokers/{broker-tax-code}/payment-service-providers": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getPspBrokerPsp",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number. Page value starts from 0",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Broker code of a PSP",
            "in": "path",
            "name": "broker-tax-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProvidersResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get the list of payment service providers related to a broker",
        "tags": [
          "Payment Service Provider's Brokers"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/quicksight/dashboard": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getEmbedUrlForAnonymousUser",
        "parameters": [
          {
            "description": "Institution's id for dashboard retrieval (Only for operator PagoPA)",
            "in": "query",
            "name": "institutionId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuicksightEmbedUrlResponse"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get aws quicksight dashboard's embed url",
        "tags": [
          "Aws Quicksight"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/stations": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y | Read | N\n",
        "operationId": "getStations",
        "parameters": [
          {
            "description": "Station's status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "TO_BE_VALIDATED"
              ]
            }
          },
          {
            "description": "Station's unique identifier",
            "in": "query",
            "name": "stationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Broker's code",
            "in": "query",
            "name": "brokerCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements in one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrapperStationsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get paginated list of stations",
        "tags": [
          "Stations"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createStation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create new station",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/connection/test": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "testStation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationTestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStationResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Test station connectivity",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/station-code": {
      "get": {
        "deprecated": true,
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getStationCode",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "query",
            "name": "ec-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationCodeResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Generate a station code given the creditor institution's code",
        "tags": [
          "Stations"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/stations/station-code/v2": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getStationCodeV2",
        "parameters": [
          {
            "description": "Creditor institution code",
            "in": "query",
            "name": "ec-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationCodeResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Generate a station code given the creditor institution's code",
        "tags": [
          "Stations"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/stations/wrapper": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "createWrapperStationDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WrapperStationDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrapperEntityStations"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Request the creation of a station that will be validated by an operator",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/wrapper/{station-code}": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateWrapperStationDetails",
        "parameters": [
          {
            "description": "Station code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Request the update of a station that will be validated by an operator",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/wrapper/{station-code}/operator": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateWrapperStationWithOperatorReview",
        "parameters": [
          {
            "description": "Station code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Creditor institution's tax code that own the station",
            "in": "query",
            "name": "ciTaxCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OperatorStationReview"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Not found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a WrapperStation with Operator review",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/{station-code}": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getStationDetails",
        "parameters": [
          {
            "description": "Station's code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Station's status",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "TO_BE_VALIDATED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get station's details",
        "tags": [
          "Stations"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "updateStation",
        "parameters": [
          {
            "description": "Station's unique identifier",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            },
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a station",
        "tags": [
          "Stations"
        ]
      }
    },
    "/stations/{station-code}/creditor-institutions": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | N\n",
        "operationId": "getCreditorInstitutionsByStationCode",
        "parameters": [
          {
            "description": "Station Code",
            "in": "path",
            "name": "station-code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of elements in one page",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Filter by creditor institution name or creditor institution fiscal code",
            "in": "query",
            "name": "ci-name-or-fiscalcode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreditorInstitutionsResource"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a paginated list of Creditor Institutions associated to a station",
        "tags": [
          "Stations"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taxonomies": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | Y\n",
        "operationId": "getTaxonomies",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "ec",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "macro_area",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "only_valid",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Taxonomies"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a list of taxonomies",
        "tags": [
          "Taxonomy"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/taxonomies/groups": {
      "get": {
        "description": "Internal | External | Synchronous | Authorization | Authentication | TPS | Idempotency | Stateless | Read/Write Intense | Cacheable\n-|-|-|-|-|-|-|-|-|-\nY | N | Y | JWT | JWT | 1.0/sec | Y | Y |  | Y\n",
        "operationId": "getTaxonomyGroups",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomyGroups"
                }
              }
            },
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a list of taxonomies groups",
        "tags": [
          "Taxonomy"
        ]
      },
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "AppInfo": {
        "type": "object",
        "properties": {
          "environment": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "AssistanceContact": {
        "type": "object",
        "properties": {
          "support_email": {
            "type": "string",
            "description": "Institution's support email contact"
          },
          "support_phone": {
            "type": "string",
            "description": "Institution's support phone contact"
          }
        },
        "description": "Institution's assistance contacts"
      },
      "AvailableCodes": {
        "type": "object",
        "properties": {
          "availableCodes": {
            "type": "array",
            "description": "List of codes not used for existing associations",
            "items": {
              "type": "string",
              "description": "List of codes not used for existing associations"
            }
          }
        }
      },
      "Billing": {
        "type": "object",
        "properties": {
          "publicServices": {
            "type": "boolean"
          },
          "recipientCode": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          }
        }
      },
      "BrokerAndEcDetailsResource": {
        "type": "object",
        "properties": {
          "brokerDetailsResource": {
            "$ref": "#/components/schemas/BrokerResource"
          },
          "creditorInstitutionDetailsResource": {
            "$ref": "#/components/schemas/CreditorInstitutionDetailsResource"
          }
        }
      },
      "BrokerDetails": {
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "broker_details": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokerDetailsResource": {
        "required": [
          "extended_fault_bean"
        ],
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "broker_details": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        },
        "description": "broker's details"
      },
      "BrokerDto": {
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": "Broker"
      },
      "BrokerECExportStatus": {
        "type": "object",
        "properties": {
          "broker_ibans_last_update": {
            "type": "string",
            "format": "date-time"
          },
          "broker_institutions_last_update": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BrokerEcDto": {
        "required": [
          "brokerCode",
          "description",
          "enabled",
          "extendedFaultBean"
        ],
        "type": "object",
        "properties": {
          "brokerCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "broker code"
          },
          "description": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "broker code"
          },
          "enabled": {
            "type": "boolean",
            "description": "Creditor Institution activation state on ApiConfig"
          },
          "extendedFaultBean": {
            "type": "boolean",
            "description": "xxx"
          }
        }
      },
      "BrokerOrPspDetailsResource": {
        "type": "object",
        "properties": {
          "brokerPspDetailsResource": {
            "$ref": "#/components/schemas/BrokerPspDetailsResource"
          },
          "paymentServiceProviderDetailsResource": {
            "$ref": "#/components/schemas/PaymentServiceProviderDetailsResource"
          }
        }
      },
      "BrokerPspDetailsDto": {
        "required": [
          "broker_psp_code",
          "description",
          "enabled",
          "extended_fault_bean"
        ],
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokerPspDetailsResource": {
        "required": [
          "broker_psp_code",
          "description",
          "enabled",
          "extended_fault_bean"
        ],
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokerPspResource": {
        "required": [
          "broker_psp_code",
          "description",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": " Psp's broker"
      },
      "BrokerResource": {
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokersPspResource": {
        "type": "object",
        "properties": {
          "brokers_psp": {
            "type": "array",
            "description": " Psp's broker",
            "items": {
              "$ref": "#/components/schemas/BrokerPspResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "BrokersResource": {
        "type": "object",
        "properties": {
          "brokers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrokerResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "BundleCreateResponse": {
        "type": "object",
        "properties": {
          "idBundle": {
            "type": "string"
          }
        }
      },
      "BundlePaymentType": {
        "required": [
          "created_date",
          "description",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "created_date": {
            "type": "string",
            "description": "The date on which the payment type was created",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "The description related to the payment type"
          },
          "id": {
            "type": "string",
            "description": "The payment type unique identifier"
          },
          "name": {
            "type": "string",
            "description": "A user-friendly name for the payment type"
          }
        },
        "description": "A list of payment types"
      },
      "BundlePaymentTypes": {
        "required": [
          "page_info",
          "payment_types"
        ],
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "payment_types": {
            "type": "array",
            "description": "A list of payment types",
            "items": {
              "$ref": "#/components/schemas/BundlePaymentType"
            }
          }
        }
      },
      "BundleRequest": {
        "type": "object",
        "properties": {
          "abi": {
            "type": "string",
            "description": "Italian Banking Association numeric code used to identify banks or credit institutions"
          },
          "cart": {
            "type": "boolean",
            "description": "If the bundle is valid for cart payments"
          },
          "description": {
            "type": "string"
          },
          "digitalStamp": {
            "type": "boolean",
            "description": "If the payment needs a tax stamp, mutually exclusive with digitalStampRestriction"
          },
          "digitalStampRestriction": {
            "type": "boolean",
            "description": "If the payment can be payed only with a tax stamp, mutually exclusive with digitalStamp"
          },
          "idBrokerPsp": {
            "type": "string",
            "description": "TaxCode of the linked broker PSP"
          },
          "idCdi": {
            "type": "string",
            "deprecated": true
          },
          "idChannel": {
            "type": "string",
            "description": "ID of the linked channel"
          },
          "maxPaymentAmount": {
            "type": "integer",
            "description": "Maximum commission fee that can bee applied",
            "format": "int64"
          },
          "minPaymentAmount": {
            "type": "integer",
            "description": "Minimum commission fee that can be applied",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "onUs": {
            "type": "boolean",
            "description": "If the bundle's commission is on the PSP"
          },
          "paymentAmount": {
            "type": "integer",
            "description": "Applied commission fee",
            "format": "int64"
          },
          "paymentType": {
            "type": "string",
            "description": "Payment type for which the bundle can be applied"
          },
          "pspBusinessName": {
            "type": "string",
            "description": "Business name of the linked broker PSP"
          },
          "touchpoint": {
            "type": "string",
            "description": "Touch-point where the bundle can be applied"
          },
          "transferCategoryList": {
            "type": "array",
            "description": "List of taxonomies that relates to the bundle",
            "items": {
              "type": "string",
              "description": "List of taxonomies that relates to the bundle"
            }
          },
          "type": {
            "type": "string",
            "description": "Bundle enum type",
            "enum": [
              "GLOBAL",
              "PUBLIC",
              "PRIVATE"
            ]
          },
          "validityDateFrom": {
            "type": "string",
            "description": "Date from which the bundle is valid",
            "format": "date"
          },
          "validityDateTo": {
            "type": "string",
            "description": "Date after which the bundle is expired",
            "format": "date"
          }
        },
        "description": "Commission bundle related to PSP to be created"
      },
      "CIBrokerDelegationPage": {
        "type": "object",
        "properties": {
          "ci_broker_delegations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIBrokerDelegationResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CIBrokerDelegationResource": {
        "type": "object",
        "properties": {
          "broker_id": {
            "type": "string",
            "description": "Broker code"
          },
          "broker_name": {
            "type": "string",
            "description": "Broker's name"
          },
          "cbill_code": {
            "type": "string",
            "description": "Creditor Institution's CBill interbank code"
          },
          "id": {
            "type": "string",
            "description": "Delegation Id"
          },
          "institution_id": {
            "type": "string",
            "description": "Institution Id"
          },
          "institution_name": {
            "type": "string",
            "description": "Institution name"
          },
          "institution_station_count": {
            "type": "integer",
            "description": "Number of institution's stations",
            "format": "int64"
          },
          "institution_tax_code": {
            "type": "string",
            "description": "Institution tax code"
          },
          "institution_type": {
            "type": "string",
            "description": "Institution type"
          },
          "is_institution_signed_in": {
            "type": "boolean",
            "description": "Describe if the institution has completed the process of sign in"
          }
        }
      },
      "CIBrokerStationPage": {
        "type": "object",
        "properties": {
          "ci_broker_stations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIBrokerStationResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CIBrokerStationResource": {
        "type": "object",
        "properties": {
          "activation_date": {
            "type": "string",
            "description": "Station's activation date",
            "format": "date-time"
          },
          "application_code": {
            "type": "integer",
            "description": "Application code",
            "format": "int64"
          },
          "aux_digit": {
            "type": "integer",
            "description": "Aux digit",
            "format": "int64"
          },
          "broker_tax_code": {
            "type": "string",
            "description": "Broker's tax code"
          },
          "creditor_institution_tax_code": {
            "type": "string",
            "description": "Creditor institution's tax code"
          },
          "last_modified_date": {
            "type": "string",
            "description": "Station's last modified date",
            "format": "date-time"
          },
          "segregation_code": {
            "type": "integer",
            "description": "Segregation code",
            "format": "int64"
          },
          "station_code": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "station_enabled": {
            "type": "boolean",
            "description": "Station's activation state"
          }
        }
      },
      "CIBundleAttribute": {
        "type": "object",
        "properties": {
          "insertedDate": {
            "type": "string",
            "format": "date-time"
          },
          "maxPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "transferCategory": {
            "type": "string"
          },
          "transferCategoryRelation": {
            "type": "string",
            "enum": [
              "EQUAL",
              "NOT_EQUAL"
            ]
          }
        }
      },
      "CIBundleAttributeModel": {
        "type": "object",
        "properties": {
          "maxPaymentAmount": {
            "type": "integer",
            "description": "Fee paid by the creditor institution's",
            "format": "int64"
          },
          "transferCategory": {
            "type": "string",
            "description": "Taxonomy identifier"
          },
          "transferCategoryRelation": {
            "type": "string",
            "enum": [
              "EQUAL",
              "NOT_EQUAL"
            ]
          }
        }
      },
      "CIBundleAttributeResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIBundleAttributeModel"
            }
          }
        }
      },
      "CIBundleFee": {
        "type": "object",
        "properties": {
          "paymentAmount": {
            "type": "integer",
            "description": "Fee paid by the creditor institution's",
            "format": "int64"
          },
          "serviceType": {
            "type": "string",
            "description": "Taxonomy description"
          },
          "specificBuiltInData": {
            "type": "string",
            "description": "Taxonomy identifier"
          }
        },
        "description": "Creditor institution bundle's attributes that describe for each taxonomy the fee paid by the CI"
      },
      "CIBundleId": {
        "type": "object",
        "properties": {
          "idCiBundle": {
            "type": "string"
          }
        }
      },
      "CIBundleResource": {
        "required": [
          "bundleTaxonomies"
        ],
        "type": "object",
        "properties": {
          "bundleTaxonomies": {
            "type": "array",
            "description": "Creditor institution bundle's attributes that describe for each taxonomy the fee paid by the CI",
            "items": {
              "$ref": "#/components/schemas/CIBundleFee"
            }
          },
          "cart": {
            "type": "boolean",
            "description": "If the bundle is valid for cart payments"
          },
          "ciBundleId": {
            "type": "string",
            "description": "Creditor institution bundle's id"
          },
          "ciBundleStatus": {
            "type": "string",
            "description": "Creditor institution bundle's status",
            "enum": [
              "ENABLED",
              "ON_REMOVAL",
              "REQUESTED",
              "AVAILABLE",
              "AVAILABLE_EXPIRED"
            ]
          },
          "ciOfferId": {
            "type": "string",
            "description": "Creditor institution bundle's subscription offer's id"
          },
          "ciRequestId": {
            "type": "string",
            "description": "Creditor institution bundle's subscription request's id"
          },
          "description": {
            "type": "string"
          },
          "digitalStamp": {
            "type": "boolean",
            "description": "If the payment needs a tax stamp, mutually exclusive with digitalStampRestriction"
          },
          "digitalStampRestriction": {
            "type": "boolean",
            "description": "If the payment can be payed only with a tax stamp, mutually exclusive with digitalStamp"
          },
          "idBrokerPsp": {
            "type": "string",
            "description": "TaxCode of the linked broker PSP"
          },
          "idBundle": {
            "type": "string",
            "description": "Bundle's id"
          },
          "idChannel": {
            "type": "string",
            "description": "ID of the linked channel"
          },
          "insertedDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "Date of the last change",
            "format": "date-time"
          },
          "maxPaymentAmount": {
            "type": "integer",
            "description": "Maximum commission fee that can bee applied",
            "format": "int64"
          },
          "minPaymentAmount": {
            "type": "integer",
            "description": "Minimum commission fee that can be applied",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "onUs": {
            "type": "boolean",
            "description": "If the bundle's commission is on the PSP"
          },
          "paymentAmount": {
            "type": "integer",
            "description": "Applied commission fee",
            "format": "int64"
          },
          "paymentType": {
            "type": "string",
            "description": "Payment type for which the bundle can be applied"
          },
          "pspBusinessName": {
            "type": "string",
            "description": "Name of the linked broker PSP"
          },
          "touchpoint": {
            "type": "string",
            "description": "Touch-point where the bundle can be applied"
          },
          "type": {
            "type": "string",
            "description": "Bundle enum type",
            "enum": [
              "GLOBAL",
              "PUBLIC",
              "PRIVATE"
            ]
          },
          "validityDateFrom": {
            "type": "string",
            "description": "Date from which the bundle is valid",
            "format": "date"
          },
          "validityDateTo": {
            "type": "string",
            "description": "Date after which the bundle is expired",
            "format": "date"
          }
        }
      },
      "CIBundleSubscriptionsDetail": {
        "type": "object",
        "properties": {
          "bundle_offer_id": {
            "type": "string",
            "description": "Public bundle offer id"
          },
          "bundle_request_id": {
            "type": "string",
            "description": "Public bundle request id"
          },
          "ci_bundle_fee_list": {
            "type": "array",
            "description": "Creditor Institution's fees details",
            "items": {
              "$ref": "#/components/schemas/CIBundleFee"
            }
          },
          "ci_bundle_id": {
            "type": "string",
            "description": "Subscription's id of a creditor institution to a public bundle"
          }
        }
      },
      "CIBundleSubscriptionsResource": {
        "type": "object",
        "properties": {
          "creditor_institutions_subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CISubscriptionInfo"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CIBundlesResource": {
        "type": "object",
        "properties": {
          "bundles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIBundleResource"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CIPaymentContact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "id": {
            "type": "string",
            "description": "User's unique identifier"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "roles": {
            "type": "array",
            "description": "User's roles",
            "items": {
              "type": "string",
              "description": "User's roles"
            }
          },
          "surname": {
            "type": "string",
            "description": "User's surname"
          },
          "user_tax_code": {
            "type": "string",
            "description": "User's tax code"
          }
        },
        "description": "Creditor institution's payment contacts"
      },
      "CISubscriptionInfo": {
        "type": "object",
        "properties": {
          "business_name": {
            "type": "string",
            "description": "Creditor Institution's business name"
          },
          "creditor_institution_code": {
            "type": "string",
            "description": "Creditor Institution's tax code"
          },
          "on_removal": {
            "type": "boolean",
            "description": "Describes if the subscription has been marked for deletion"
          }
        }
      },
      "ChannelCodeResource": {
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          }
        }
      },
      "ChannelDetailsDto": {
        "required": [
          "flag_standin",
          "validationUrl"
        ],
        "type": "object",
        "properties": {
          "agid": {
            "type": "boolean",
            "description": " agid"
          },
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "broker_psp_code": {
            "type": "string",
            "description": " psp code"
          },
          "card_chart": {
            "type": "boolean",
            "description": " card chart"
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "digital_stamp_brand": {
            "type": "boolean",
            "description": " digital stamp brand"
          },
          "enabled": {
            "type": "boolean"
          },
          "flagPspCp": {
            "type": "boolean",
            "description": "Represents the authorization to carry out the transfer of the information present in additional payment information in the tags relating to payment by card for the PA in V1"
          },
          "flag_io": {
            "type": "boolean",
            "description": " flag io"
          },
          "flag_standin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "ip": {
            "type": "string",
            "description": " channel's ip"
          },
          "new_fault_code": {
            "type": "boolean",
            "description": " new fault code"
          },
          "new_password": {
            "type": "string",
            "description": " channel's new password"
          },
          "nmp_service": {
            "type": "string",
            "description": " nmp service"
          },
          "note": {
            "type": "string",
            "description": "channel note description by operation team"
          },
          "on_us": {
            "type": "boolean",
            "description": " on us"
          },
          "password": {
            "type": "string",
            "description": " channel's password"
          },
          "payment_model": {
            "type": "string",
            "description": " payment model",
            "enum": [
              "IMMEDIATE",
              "IMMEDIATE_MULTIBENEFICIARY",
              "DEFERRED",
              "ACTIVATED_AT_PSP"
            ]
          },
          "payment_types": {
            "type": "array",
            "description": " List of payment types",
            "items": {
              "type": "string",
              "description": " List of payment types"
            }
          },
          "port": {
            "type": "integer",
            "description": " channel's port",
            "format": "int64"
          },
          "primitive_version": {
            "type": "integer",
            "description": "primitive version",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "description": " channel's protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "proxy_enabled": {
            "type": "boolean",
            "description": " proxy Enabled"
          },
          "proxy_host": {
            "type": "string",
            "description": " proxy Host"
          },
          "proxy_password": {
            "type": "string",
            "description": " proxy Password"
          },
          "proxy_port": {
            "type": "integer",
            "description": " proxy Port",
            "format": "int64"
          },
          "proxy_username": {
            "type": "string",
            "description": " proxy Username"
          },
          "psp_email": {
            "type": "string",
            "description": " email of the payment service provider"
          },
          "recovery": {
            "type": "boolean",
            "description": " recovery"
          },
          "redirect_ip": {
            "type": "string",
            "description": " redirect ip"
          },
          "redirect_path": {
            "type": "string",
            "description": " redirect path"
          },
          "redirect_port": {
            "type": "integer",
            "description": " redirect port",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "description": " redirect protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirect_query_string": {
            "type": "string",
            "description": " redirect query string"
          },
          "rt_push": {
            "type": "boolean",
            "description": " rt Push"
          },
          "serv_plugin": {
            "type": "string",
            "description": " service plugin"
          },
          "service": {
            "type": "string",
            "description": " channel's service"
          },
          "status": {
            "type": "string",
            "description": "channel's validation status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "target_host": {
            "type": "string",
            "description": " target host"
          },
          "target_path": {
            "type": "string",
            "description": " target path's"
          },
          "target_port": {
            "type": "integer",
            "description": " target port",
            "format": "int64"
          },
          "thread_number": {
            "type": "integer",
            "description": " thread number",
            "format": "int64"
          },
          "timeout_a": {
            "type": "integer",
            "description": " timeout A",
            "format": "int64"
          },
          "timeout_b": {
            "type": "integer",
            "description": " timeout B",
            "format": "int64"
          },
          "timeout_c": {
            "type": "integer",
            "description": " timeout C",
            "format": "int64"
          },
          "validationUrl": {
            "type": "string",
            "description": "Url jira for ChannelDetail validation"
          }
        }
      },
      "ChannelDetailsResource": {
        "required": [
          "channel_code"
        ],
        "type": "object",
        "properties": {
          "agid": {
            "type": "boolean",
            "description": " agid"
          },
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "broker_psp_code": {
            "type": "string",
            "description": " psp code"
          },
          "card_chart": {
            "type": "boolean",
            "description": " card chart"
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "createdAt": {
            "type": "string",
            "description": " creation date",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": " created by"
          },
          "digital_stamp_brand": {
            "type": "boolean",
            "description": " digital stamp brand"
          },
          "enabled": {
            "type": "boolean"
          },
          "flagStandin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "flag_io": {
            "type": "boolean",
            "description": " flag io"
          },
          "ip": {
            "type": "string",
            "description": " channel's ip"
          },
          "modifiedAt": {
            "type": "string",
            "description": " modification date",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": " modified by"
          },
          "new_fault_code": {
            "type": "boolean",
            "description": " new fault code"
          },
          "new_password": {
            "type": "string",
            "description": " channel's new password"
          },
          "nmp_service": {
            "type": "string",
            "description": " nmp service"
          },
          "note": {
            "type": "string",
            "description": "Operator review note"
          },
          "on_us": {
            "type": "boolean",
            "description": " on us"
          },
          "password": {
            "type": "string",
            "description": " channel's password"
          },
          "payment_model": {
            "type": "string",
            "description": " payment model",
            "enum": [
              "IMMEDIATE",
              "IMMEDIATE_MULTIBENEFICIARY",
              "DEFERRED",
              "ACTIVATED_AT_PSP"
            ]
          },
          "payment_types": {
            "type": "array",
            "description": " List of payment types",
            "items": {
              "type": "string",
              "description": " List of payment types"
            }
          },
          "pendingUpdate": {
            "type": "boolean",
            "description": "Flag that describe if there is a pending update for the channel"
          },
          "port": {
            "type": "integer",
            "description": " channel's port",
            "format": "int64"
          },
          "primitive_version": {
            "type": "integer",
            "description": "primitive version",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "description": " channel's protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "proxy_enabled": {
            "type": "boolean",
            "description": " proxy Enabled"
          },
          "proxy_host": {
            "type": "string",
            "description": " proxy Host"
          },
          "proxy_password": {
            "type": "string",
            "description": " proxy Password"
          },
          "proxy_port": {
            "type": "integer",
            "description": " proxy Port",
            "format": "int64"
          },
          "proxy_username": {
            "type": "string",
            "description": " proxy Username"
          },
          "recovery": {
            "type": "boolean",
            "description": " recovery"
          },
          "redirect_ip": {
            "type": "string",
            "description": " redirect ip"
          },
          "redirect_path": {
            "type": "string",
            "description": " redirect path"
          },
          "redirect_port": {
            "type": "integer",
            "description": " redirect port",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "description": " redirect protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirect_query_string": {
            "type": "string",
            "description": " redirect query string"
          },
          "rt_push": {
            "type": "boolean",
            "description": " rt Push"
          },
          "serv_plugin": {
            "type": "string",
            "description": " service plugin"
          },
          "service": {
            "type": "string",
            "description": " channel's service"
          },
          "target_host": {
            "type": "string",
            "description": " target host"
          },
          "target_host_nmp": {
            "type": "string",
            "description": " target host NMP"
          },
          "target_path": {
            "type": "string",
            "description": " target path's"
          },
          "target_path_nmp": {
            "type": "string",
            "description": " target path NMP"
          },
          "target_port": {
            "type": "integer",
            "description": " target port",
            "format": "int64"
          },
          "target_port_nmp": {
            "type": "string",
            "description": " target port NMP"
          },
          "thread_number": {
            "type": "integer",
            "description": " thread number",
            "format": "int64"
          },
          "timeout_a": {
            "type": "integer",
            "description": " timeout A",
            "format": "int64"
          },
          "timeout_b": {
            "type": "integer",
            "description": " timeout B",
            "format": "int64"
          },
          "timeout_c": {
            "type": "integer",
            "description": " timeout C",
            "format": "int64"
          },
          "wrapperStatus": {
            "type": "string",
            "description": "channel's validation status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          }
        }
      },
      "ChannelDetailsResourceList": {
        "required": [
          "channels"
        ],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "List of psp channels",
            "items": {
              "$ref": "#/components/schemas/ChannelDetailsResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "ChannelPspListResource": {
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "payment_service_providers": {
            "type": "array",
            "description": "enabled",
            "items": {
              "$ref": "#/components/schemas/ChannelPspResource"
            }
          }
        }
      },
      "ChannelPspResource": {
        "required": [
          "business_name",
          "enabled",
          "payment_types",
          "psp_code",
          "tax_code"
        ],
        "type": "object",
        "properties": {
          "business_name": {
            "type": "string",
            "description": "business name of the payment service provider"
          },
          "enabled": {
            "type": "boolean",
            "description": "enabled"
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string",
              "description": "List of payment types"
            }
          },
          "psp_code": {
            "type": "string",
            "description": "Code of the payment service provider"
          },
          "tax_code": {
            "type": "string",
            "description": "Payment Service Provider tax code"
          }
        },
        "description": "enabled"
      },
      "CiTaxCodeList": {
        "required": [
          "ciFiscalCodeList"
        ],
        "type": "object",
        "properties": {
          "ciFiscalCodeList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CompanyInformation": {
        "type": "object",
        "properties": {
          "business_register_place": {
            "type": "string",
            "description": "Institution's business register place"
          },
          "rea": {
            "type": "string",
            "description": "Institution's REA"
          },
          "share_capital": {
            "type": "string",
            "description": "Institution's share capital value"
          }
        },
        "description": "GPS, SCP, PT optional data"
      },
      "CreateStationMaintenance": {
        "required": [
          "end_date_time",
          "stand_in",
          "start_date_time",
          "station_code"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "The end date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          },
          "stand_in": {
            "type": "boolean",
            "description": "StandIn flag"
          },
          "start_date_time": {
            "type": "string",
            "description": "The start date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          },
          "station_code": {
            "type": "string",
            "description": "Code of the station subject of the maintenance"
          }
        }
      },
      "CreditorInstitutionAddressDto": {
        "required": [
          "city",
          "countryCode",
          "location",
          "taxDomicile",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Creditor Institution's city"
          },
          "countryCode": {
            "type": "string",
            "description": "Creditor Institution's country code"
          },
          "location": {
            "type": "string",
            "description": "Creditor Institution's physical address"
          },
          "taxDomicile": {
            "type": "string",
            "description": "Creditor Institution's tax domicile"
          },
          "zipCode": {
            "type": "string",
            "description": "Creditor Institution's zip code"
          }
        },
        "description": "Creditor Institution's address object"
      },
      "CreditorInstitutionAddressResource": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Creditor Institution's city"
          },
          "countryCode": {
            "type": "string",
            "description": "Creditor Institution's country code"
          },
          "location": {
            "type": "string",
            "description": "Creditor Institution's physical address"
          },
          "taxDomicile": {
            "type": "string",
            "description": "Creditor Institution's tax domicile"
          },
          "zipCode": {
            "type": "string",
            "description": "Creditor Institution's zip code"
          }
        },
        "description": "Creditor Institution's address object"
      },
      "CreditorInstitutionAndBrokerDto": {
        "required": [
          "brokerDto",
          "creditorInstitutionDto"
        ],
        "type": "object",
        "properties": {
          "brokerDto": {
            "$ref": "#/components/schemas/BrokerDto"
          },
          "creditorInstitutionDto": {
            "$ref": "#/components/schemas/CreditorInstitutionDto"
          }
        }
      },
      "CreditorInstitutionContactsResource": {
        "type": "object",
        "properties": {
          "ci_payment_contacts": {
            "type": "array",
            "description": "Creditor institution's payment contacts",
            "items": {
              "$ref": "#/components/schemas/CIPaymentContact"
            }
          },
          "operative_table": {
            "$ref": "#/components/schemas/TavoloOpResource"
          }
        }
      },
      "CreditorInstitutionDetailsResource": {
        "required": [
          "address",
          "businessName",
          "ciTaxCode",
          "enabled",
          "pspPayment",
          "reportingFtp",
          "reportingZip"
        ],
        "type": "object",
        "properties": {
          "aca": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/CreditorInstitutionAddressResource"
          },
          "applicationCode": {
            "type": "string",
            "description": "ApplicationCode"
          },
          "auxDigit": {
            "type": "string",
            "description": "AuxDigit maximum:3 minimum:0"
          },
          "broadcast": {
            "type": "boolean",
            "description": "Broadcast"
          },
          "businessName": {
            "type": "string",
            "description": "Creditor Institution's business name"
          },
          "cbillCode": {
            "type": "string",
            "description": "Creditor Institution's CBill interbank code"
          },
          "ciTaxCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Creditor Institution's code(Fiscal Code)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Creditor Institution activation state on ApiConfig"
          },
          "mod4": {
            "type": "string",
            "description": "Mod4"
          },
          "pspPayment": {
            "type": "boolean",
            "description": "Enables the zipping of the content that goes through fstp"
          },
          "reportingFtp": {
            "type": "boolean",
            "description": "Enables the zipping of the content that goes through fstp"
          },
          "reportingZip": {
            "type": "boolean",
            "description": "Enables the zipping of the content that goes through fstp"
          },
          "segregationCode": {
            "type": "string",
            "description": "SegregationCode"
          },
          "stand_in": {
            "type": "boolean"
          }
        }
      },
      "CreditorInstitutionDto": {
        "required": [
          "address",
          "businessName",
          "creditorInstitutionCode",
          "enabled",
          "pspPayment",
          "reportingFtp",
          "reportingZip"
        ],
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/CreditorInstitutionAddressDto"
          },
          "businessName": {
            "type": "string",
            "description": "Creditor Institution's business name"
          },
          "cbillCode": {
            "type": "string",
            "description": "Creditor Institution's CBill interbank code",
            "example": "ABCDE"
          },
          "creditorInstitutionCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Creditor Institution's code(Fiscal Code)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Creditor Institution activation state on ApiConfig"
          },
          "pspPayment": {
            "type": "boolean",
            "description": "Creditor Institution's is a psp Payment broker"
          },
          "reportingFtp": {
            "type": "boolean",
            "description": "Enables flow towards Creditor Institution in fstp mode"
          },
          "reportingZip": {
            "type": "boolean",
            "description": "Enables the zipping of the content that goes through fstp"
          }
        }
      },
      "CreditorInstitutionInfo": {
        "required": [
          "businessName",
          "ciTaxCode"
        ],
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "The business name of the creditor institution",
            "example": "Comune di Roma"
          },
          "ciTaxCode": {
            "type": "string",
            "description": "The tax code of the creditor institution",
            "example": "02438750586"
          }
        }
      },
      "CreditorInstitutionInfoResource": {
        "type": "object",
        "properties": {
          "creditor_institution_info_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditorInstitutionInfo"
            }
          }
        }
      },
      "CreditorInstitutionResource": {
        "required": [
          "businessName",
          "ciTaxCode",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "aca": {
            "type": "boolean"
          },
          "applicationCode": {
            "type": "string",
            "description": "ApplicationCode"
          },
          "auxDigit": {
            "type": "string",
            "description": "AuxDigit maximum:3 minimum:0"
          },
          "broadcast": {
            "type": "boolean",
            "description": "Broadcast"
          },
          "businessName": {
            "type": "string",
            "description": "Creditor Institution's business name"
          },
          "cbillCode": {
            "type": "string",
            "description": "Creditor Institution's CBill interbank code"
          },
          "ciTaxCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Creditor Institution's code(Fiscal Code)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Creditor Institution activation state on ApiConfig"
          },
          "mod4": {
            "type": "string",
            "description": "Mod4"
          },
          "segregationCode": {
            "type": "string",
            "description": "SegregationCode"
          },
          "stand_in": {
            "type": "boolean"
          }
        },
        "description": "A list of Creditor Institution's"
      },
      "CreditorInstitutionStationDto": {
        "required": [
          "auxDigit",
          "broadcast",
          "segregationCode",
          "stationCode"
        ],
        "type": "object",
        "properties": {
          "aca": {
            "type": "boolean",
            "description": "Station's ACA enabled"
          },
          "applicationCode": {
            "type": "integer",
            "description": "Station's application code",
            "format": "int64"
          },
          "auxDigit": {
            "type": "integer",
            "description": "Station's auxiliary digit",
            "format": "int64"
          },
          "broadcast": {
            "type": "boolean",
            "description": "Station's broadcast enabled"
          },
          "mod4": {
            "type": "boolean",
            "description": "Station's mod 4 enabled"
          },
          "segregationCode": {
            "type": "string",
            "description": "Station's segregation code number"
          },
          "stand_in": {
            "type": "boolean",
            "description": "Station's StandIn enabled"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          }
        }
      },
      "CreditorInstitutionStationEditResource": {
        "required": [
          "stationCode"
        ],
        "type": "object",
        "properties": {
          "aca": {
            "type": "boolean"
          },
          "applicationCode": {
            "type": "integer",
            "description": "Station's application code",
            "format": "int64"
          },
          "auxDigit": {
            "type": "integer",
            "description": "Station's auxiliary digit",
            "format": "int64"
          },
          "broadcast": {
            "type": "boolean",
            "description": "Station's broadcast enabled"
          },
          "mod4": {
            "type": "boolean",
            "description": "Station's mod 4 enabled"
          },
          "segregationCode": {
            "type": "string",
            "description": "Station's segregation code number"
          },
          "stand_in": {
            "type": "boolean"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          }
        }
      },
      "CreditorInstitutionsResource": {
        "required": [
          "creditor_institutions",
          "page_info"
        ],
        "type": "object",
        "properties": {
          "creditor_institutions": {
            "type": "array",
            "description": "A list of Creditor Institution's",
            "items": {
              "$ref": "#/components/schemas/CreditorInstitutionResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "Delegation": {
        "type": "object",
        "properties": {
          "broker_id": {
            "type": "string",
            "description": "Broker code"
          },
          "broker_name": {
            "type": "string",
            "description": "broker's name"
          },
          "broker_tax_code": {
            "type": "string",
            "description": "broker tax code"
          },
          "broker_type": {
            "type": "string",
            "description": "broker type"
          },
          "id": {
            "type": "string",
            "description": "delegation Id"
          },
          "institution_id": {
            "type": "string",
            "description": "institution Id"
          },
          "institution_name": {
            "type": "string",
            "description": "institution name"
          },
          "institution_root_name": {
            "type": "string",
            "description": "institution root name"
          },
          "institution_type": {
            "type": "string",
            "description": "institution type"
          },
          "product_id": {
            "type": "string",
            "description": " id product"
          },
          "tax_code": {
            "type": "string",
            "description": "tax code"
          },
          "type": {
            "type": "string",
            "description": "delegation type"
          }
        }
      },
      "DelegationResource": {
        "type": "object",
        "properties": {
          "delegation_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Delegation"
            }
          }
        }
      },
      "DpoData": {
        "required": [
          "address",
          "email",
          "pec"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC"
          }
        },
        "description": "Data Protection Officer (DPO) specific data"
      },
      "FeatureFlags": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "Iban": {
        "required": [
          "due_date",
          "iban",
          "is_active",
          "validity_date"
        ],
        "type": "object",
        "properties": {
          "ci_owner": {
            "type": "string",
            "description": "Fiscal code of the Creditor Institution who owns the IBAN"
          },
          "company_name": {
            "type": "string",
            "description": "The Creditor Institution company name"
          },
          "description": {
            "type": "string",
            "description": "The description the Creditor Institution gives to the IBAN about its usage"
          },
          "due_date": {
            "type": "string",
            "description": "The date on which the IBAN will expire"
          },
          "iban": {
            "type": "string",
            "description": "The IBAN code"
          },
          "is_active": {
            "type": "boolean",
            "description": "True if the IBAN is active"
          },
          "labels": {
            "type": "array",
            "description": "The labels array associated with the IBAN",
            "items": {
              "$ref": "#/components/schemas/IbanLabel"
            }
          },
          "publication_date": {
            "type": "string",
            "description": "The date on which the IBAN has been inserted in the system"
          },
          "validity_date": {
            "type": "string",
            "description": "The date the Creditor Institution wants the IBAN to be used for its payments"
          }
        }
      },
      "IbanCreate": {
        "required": [
          "due_date",
          "iban",
          "is_active",
          "validity_date"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description the Creditor Institution gives to the iban about its usage"
          },
          "due_date": {
            "type": "string",
            "description": "The date on which the iban will expire",
            "format": "date"
          },
          "iban": {
            "type": "string",
            "description": "the iban code"
          },
          "is_active": {
            "type": "boolean",
            "description": "True if the iban is active"
          },
          "labels": {
            "type": "array",
            "description": "The labels array associated with the iban",
            "items": {
              "$ref": "#/components/schemas/IbanLabel"
            }
          },
          "validity_date": {
            "type": "string",
            "description": "The date the Creditor Institution wants the iban to be used for its payments",
            "format": "date"
          }
        }
      },
      "IbanLabel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "The labels array associated with the IBAN"
      },
      "Ibans": {
        "required": [
          "ibans_enhanced"
        ],
        "type": "object",
        "properties": {
          "ibans_enhanced": {
            "type": "array",
            "description": "Creditor Institution's IBAN objects",
            "items": {
              "$ref": "#/components/schemas/Iban"
            }
          }
        }
      },
      "InstitutionApiKeys": {
        "required": [
          "displayName",
          "id",
          "primaryKey",
          "secondaryKey"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Institution's name Api Key"
          },
          "id": {
            "type": "string",
            "description": "Institution's subscription id"
          },
          "primaryKey": {
            "type": "string",
            "description": "Institution's primary Api Key"
          },
          "secondaryKey": {
            "type": "string",
            "description": "Institution's secondary Api Key"
          }
        }
      },
      "InstitutionApiKeysResource": {
        "type": "object",
        "properties": {
          "institution_api_key_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionApiKeys"
            }
          }
        }
      },
      "InstitutionBase": {
        "required": [
          "id",
          "name",
          "user_product_roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Institution's unique internal identifier"
          },
          "name": {
            "type": "string",
            "description": "Institution's name"
          },
          "user_product_roles": {
            "type": "array",
            "description": "Logged user's roles on product",
            "items": {
              "$ref": "#/components/schemas/UserProductRole"
            }
          }
        }
      },
      "InstitutionBaseResources": {
        "type": "object",
        "properties": {
          "institution_base_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionBase"
            }
          }
        }
      },
      "InstitutionDetail": {
        "required": [
          "address",
          "external_id",
          "id",
          "name",
          "origin",
          "origin_id",
          "status",
          "tax_code",
          "user_product_roles"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "assistance_contacts": {
            "$ref": "#/components/schemas/AssistanceContact"
          },
          "company_informations": {
            "$ref": "#/components/schemas/CompanyInformation"
          },
          "dpo_data": {
            "$ref": "#/components/schemas/DpoData"
          },
          "external_id": {
            "type": "string",
            "description": "Institution's unique external identifier"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique internal identifier"
          },
          "institution_type": {
            "type": "string",
            "description": "Institution's type",
            "enum": [
              "AS",
              "PA",
              "GSP",
              "PT",
              "PG",
              "SCP",
              "PSP",
              "SA",
              "GPU",
              "PRV"
            ]
          },
          "mail_address": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "name": {
            "type": "string",
            "description": "Institution's name"
          },
          "onboarding": {
            "type": "array",
            "description": "Institution's product data",
            "items": {
              "$ref": "#/components/schemas/Onboarding"
            }
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "origin_id": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "psp_data": {
            "$ref": "#/components/schemas/PspData"
          },
          "recipient_code": {
            "type": "string",
            "description": "Billing recipient code"
          },
          "status": {
            "type": "string",
            "description": "Institution onboarding status"
          },
          "tax_code": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "user_product_roles": {
            "type": "array",
            "description": "Logged user's roles on product",
            "items": {
              "$ref": "#/components/schemas/UserProductRole"
            }
          }
        }
      },
      "InstitutionUploadData": {
        "required": [
          "appChannel",
          "cbill",
          "fullName",
          "info",
          "taxCode",
          "webChannel"
        ],
        "type": "object",
        "properties": {
          "appChannel": {
            "type": "boolean",
            "description": "Boolean to refer if it has a web channel"
          },
          "cbill": {
            "type": "string",
            "description": "CI cbill"
          },
          "fullName": {
            "type": "string",
            "description": "CI full name"
          },
          "info": {
            "type": "string",
            "description": "CI info"
          },
          "logo": {
            "type": "string",
            "description": "Existing logo url"
          },
          "organization": {
            "type": "string",
            "description": "CI organization unit managing the payment "
          },
          "physicalChannel": {
            "type": "string",
            "description": "CI physical channel data"
          },
          "posteAccountNumber": {
            "type": "string",
            "description": "Poste account number"
          },
          "posteAuth": {
            "type": "string",
            "description": "Poste auth code"
          },
          "posteName": {
            "type": "string",
            "description": "Poste name"
          },
          "taxCode": {
            "type": "string",
            "description": "CI tax code"
          },
          "webChannel": {
            "type": "boolean",
            "description": "Boolean to refer if it has a web channel"
          }
        }
      },
      "MaintenanceHoursSummaryResource": {
        "required": [
          "annual_hours_limit",
          "extra_hours",
          "remaining_hours",
          "scheduled_hours",
          "used_hours"
        ],
        "type": "object",
        "properties": {
          "annual_hours_limit": {
            "type": "string",
            "description": "Annual limit of maintenance hours"
          },
          "extra_hours": {
            "type": "string",
            "description": "Count of maintenance's hours that exceed annual limit"
          },
          "remaining_hours": {
            "type": "string",
            "description": "Count of remaining maintenance's hours before annual limit"
          },
          "scheduled_hours": {
            "type": "string",
            "description": "Count of scheduled maintenance's hours"
          },
          "used_hours": {
            "type": "string",
            "description": "Count of used maintenance's hours"
          }
        }
      },
      "MaintenanceMessage": {
        "required": [
          "bannerMessage",
          "pageMessage"
        ],
        "type": "object",
        "properties": {
          "bannerMessage": {
            "type": "string",
            "description": "Maintenance banner message"
          },
          "pageMessage": {
            "type": "string",
            "description": "Maintenance page message"
          }
        }
      },
      "Onboarding": {
        "type": "object",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/Billing"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PENDING",
              "TOBEVALIDATED",
              "SUSPENDED",
              "DELETED",
              "REJECTED"
            ]
          }
        },
        "description": "Institution's product data"
      },
      "OperatorChannelReview": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "description": "Operator review note"
          }
        }
      },
      "OperatorStationReview": {
        "type": "object",
        "properties": {
          "note": {
            "type": "string",
            "description": "Operator review note"
          }
        }
      },
      "PSPBundleResource": {
        "required": [
          "bundleTaxonomies"
        ],
        "type": "object",
        "properties": {
          "bundleTaxonomies": {
            "type": "array",
            "description": "List of taxonomies that relates to the bundle",
            "items": {
              "$ref": "#/components/schemas/PSPBundleTaxonomy"
            }
          },
          "cart": {
            "type": "boolean",
            "description": "If the bundle is valid for cart payments"
          },
          "description": {
            "type": "string"
          },
          "digitalStamp": {
            "type": "boolean",
            "description": "If the payment needs a tax stamp, mutually exclusive with digitalStampRestriction"
          },
          "digitalStampRestriction": {
            "type": "boolean",
            "description": "If the payment can be payed only with a tax stamp, mutually exclusive with digitalStamp"
          },
          "idBrokerPsp": {
            "type": "string",
            "description": "TaxCode of the linked broker PSP"
          },
          "idBundle": {
            "type": "string",
            "description": "Bundle's id"
          },
          "idChannel": {
            "type": "string",
            "description": "ID of the linked channel"
          },
          "insertedDate": {
            "type": "string",
            "description": "Date of creation",
            "format": "date-time"
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "Date of the last change",
            "format": "date-time"
          },
          "maxPaymentAmount": {
            "type": "integer",
            "description": "Maximum commission fee that can bee applied",
            "format": "int64"
          },
          "minPaymentAmount": {
            "type": "integer",
            "description": "Minimum commission fee that can be applied",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "onUs": {
            "type": "boolean",
            "description": "If the bundle's commission is on the PSP"
          },
          "paymentAmount": {
            "type": "integer",
            "description": "Applied commission fee",
            "format": "int64"
          },
          "paymentType": {
            "type": "string",
            "description": "Payment type for which the bundle can be applied"
          },
          "pspBusinessName": {
            "type": "string",
            "description": "Name of the linked broker PSP"
          },
          "touchpoint": {
            "type": "string",
            "description": "Touch-point where the bundle can be applied"
          },
          "type": {
            "type": "string",
            "description": "Bundle enum type",
            "enum": [
              "GLOBAL",
              "PUBLIC",
              "PRIVATE"
            ]
          },
          "validityDateFrom": {
            "type": "string",
            "description": "Date from which the bundle is valid",
            "format": "date"
          },
          "validityDateTo": {
            "type": "string",
            "description": "Date after which the bundle is expired",
            "format": "date"
          }
        }
      },
      "PSPBundleTaxonomy": {
        "required": [
          "ecType",
          "endDate",
          "macroAreaName"
        ],
        "type": "object",
        "properties": {
          "ecType": {
            "type": "string",
            "description": "Creditor Institution type"
          },
          "endDate": {
            "type": "string",
            "description": "End date of validity"
          },
          "macroAreaName": {
            "type": "string",
            "description": "Macro area name"
          },
          "serviceType": {
            "type": "string",
            "description": "Taxonomy description"
          },
          "specificBuiltInData": {
            "type": "string",
            "description": "Taxonomy identifier"
          }
        },
        "description": "List of taxonomies that relates to the bundle"
      },
      "PSPBundlesResource": {
        "type": "object",
        "properties": {
          "bundles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PSPBundleResource"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PageInfo": {
        "type": "object",
        "properties": {
          "items_found": {
            "type": "integer",
            "description": "Number of items found. (The last page may have fewer elements than required)",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Required number of items per page",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Page number",
            "format": "int32"
          },
          "total_items": {
            "type": "integer",
            "format": "int64"
          },
          "total_pages": {
            "type": "integer",
            "description": "Total number of pages",
            "format": "int32"
          }
        }
      },
      "PaymentServiceProviderDetailsDto": {
        "required": [
          "business_name",
          "enabled",
          "psp_code"
        ],
        "type": "object",
        "properties": {
          "abi": {
            "type": "string"
          },
          "agid_psp": {
            "type": "boolean"
          },
          "bic": {
            "type": "string"
          },
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "my_bank_code": {
            "type": "string"
          },
          "psp_code": {
            "type": "string"
          },
          "stamp": {
            "type": "boolean"
          },
          "tax_code": {
            "type": "string"
          },
          "vat_number": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderDetailsResource": {
        "required": [
          "business_name",
          "enabled",
          "psp_code"
        ],
        "type": "object",
        "properties": {
          "abi": {
            "type": "string",
            "description": "abi of the payment service provider"
          },
          "agid_psp": {
            "type": "boolean",
            "description": "agid code of the payment service provider"
          },
          "bic": {
            "type": "string",
            "description": "bic of the payment service provider"
          },
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "my_bank_code": {
            "type": "string",
            "description": "bank code of the payment service provider"
          },
          "psp_code": {
            "type": "string"
          },
          "stamp": {
            "type": "boolean",
            "description": " stamp of the payment service provider"
          },
          "tax_code": {
            "type": "string",
            "description": "tax code of the payment service provider"
          },
          "vat_number": {
            "type": "string",
            "description": " of the payment service provider"
          }
        }
      },
      "PaymentServiceProviderResource": {
        "required": [
          "business_name",
          "enabled",
          "psp_code"
        ],
        "type": "object",
        "properties": {
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "psp_code": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProvidersResource": {
        "required": [
          "page_info",
          "payment_service_providers"
        ],
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "payment_service_providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentServiceProviderResource"
            }
          }
        }
      },
      "PaymentType": {
        "required": [
          "description",
          "payment_type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the payment type"
          },
          "payment_type": {
            "type": "string",
            "description": "Code of payment type"
          }
        },
        "description": "List of payment types"
      },
      "PaymentTypes": {
        "required": [
          "payment_types"
        ],
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "$ref": "#/components/schemas/PaymentType"
            }
          }
        }
      },
      "PaymentsResult": {
        "type": "object",
        "properties": {
          "currentPageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemJson": {
        "required": [
          "detail",
          "status",
          "title"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the problem.",
            "example": "There was an error processing the request"
          },
          "status": {
            "maximum": 600,
            "minimum": 100,
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "example": 200
          },
          "title": {
            "type": "string",
            "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable"
          }
        }
      },
      "Product": {
        "required": [
          "description",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "url_bo": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "url_public": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "ProductResource": {
        "type": "object",
        "properties": {
          "product_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "PspChannelPaymentTypes": {
        "required": [
          "payment_types"
        ],
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": " List of payment types"
      },
      "PspChannelPaymentTypesResource": {
        "required": [
          "payment_types"
        ],
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "description": " List of payment types",
            "items": {
              "type": "string",
              "description": " List of payment types"
            }
          }
        }
      },
      "PspChannelResource": {
        "required": [
          "channel_code",
          "enabled",
          "payment_types"
        ],
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "description": "Channel's unique identifier"
          },
          "enabled": {
            "type": "boolean",
            "description": "Channel enabled"
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string",
              "description": "List of payment types"
            }
          }
        },
        "description": " Channel list"
      },
      "PspChannelsResource": {
        "required": [
          "channels"
        ],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": " Channel list",
            "items": {
              "$ref": "#/components/schemas/PspChannelResource"
            }
          }
        }
      },
      "PspData": {
        "required": [
          "abi_code",
          "business_register_number",
          "legal_register_number",
          "vat_number_group"
        ],
        "type": "object",
        "properties": {
          "abi_code": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "business_register_number": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "legal_register_name": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legal_register_number": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vat_number_group": {
            "type": "boolean",
            "description": "PSP's Vat Number group"
          }
        },
        "description": "Payment Service Provider (PSP) specific data"
      },
      "PublicBundleRequest": {
        "required": [
          "ciFiscalCode",
          "idBundle",
          "idBundleRequest"
        ],
        "type": "object",
        "properties": {
          "acceptedDate": {
            "type": "string",
            "format": "date-time"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CIBundleAttribute"
            }
          },
          "ciFiscalCode": {
            "type": "string"
          },
          "idBundle": {
            "type": "string"
          },
          "idBundleRequest": {
            "type": "string"
          },
          "idPsp": {
            "type": "string"
          },
          "insertedDate": {
            "type": "string",
            "format": "date-time"
          },
          "rejectionDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "QuicksightEmbedUrlResponse": {
        "type": "object",
        "properties": {
          "embedUrl": {
            "type": "string"
          }
        }
      },
      "StationCodeResource": {
        "required": [
          "stationCode"
        ],
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          }
        }
      },
      "StationDetailResource": {
        "required": [
          "associatedCreditorInstitutions",
          "enabled",
          "primitiveVersion",
          "stationCode",
          "version"
        ],
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "description": "Station's activation date",
            "format": "date-time"
          },
          "associatedCreditorInstitutions": {
            "type": "integer",
            "description": "Number of station's creditor institutions",
            "format": "int32"
          },
          "brokerCode": {
            "type": "string",
            "description": "Station's broker code"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "brokerDetails": {
            "$ref": "#/components/schemas/BrokerDetailsResource"
          },
          "brokerObjId": {
            "type": "integer",
            "description": "Station's broker object id",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "description": "Station created on",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "User that create the station"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state"
          },
          "flagOnline": {
            "type": "boolean",
            "description": "Station's online flag"
          },
          "flagStandin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "ip": {
            "type": "string",
            "description": "Station's ip address"
          },
          "ip4Mod": {
            "type": "string",
            "description": "Station's ip v4"
          },
          "isConnectionSync": {
            "type": "boolean",
            "description": "Describe the station connection's type, true synchronous, false asynchronous"
          },
          "isPaymentOptionsEnabled": {
            "type": "boolean",
            "description": "Flag that enables EC's payment options service"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Station's last modified date",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Last user that modified the station"
          },
          "newPassword": {
            "type": "string",
            "description": "Station's new password"
          },
          "note": {
            "type": "string",
            "description": "Operator review note"
          },
          "password": {
            "type": "string",
            "description": "Station's password"
          },
          "pendingUpdate": {
            "type": "boolean",
            "description": "Flag that describe if there is a pending update for the station"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "port": {
            "type": "integer",
            "description": "Station's port",
            "format": "int64"
          },
          "port4Mod": {
            "type": "integer",
            "description": "Station's v4 port",
            "format": "int64"
          },
          "primitiveVersion": {
            "type": "integer",
            "description": "Station's primitive version",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "description": "Station's http protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "protocol4Mod": {
            "type": "string",
            "description": "Station's protocol v4",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "proxyEnabled": {
            "type": "boolean",
            "description": "Station's proxy enabled variable"
          },
          "proxyHost": {
            "type": "string",
            "description": "Station's proxy host"
          },
          "proxyPassword": {
            "type": "string",
            "description": "Station's proxy password"
          },
          "proxyPort": {
            "type": "integer",
            "description": "Station's proxy port",
            "format": "int64"
          },
          "proxyUsername": {
            "type": "string",
            "description": "Station's proxy username"
          },
          "redirectIp": {
            "type": "string",
            "description": "Station's redirect Ip"
          },
          "redirectPath": {
            "type": "string",
            "description": "Station's redirect path"
          },
          "redirectPort": {
            "type": "integer",
            "description": "Station's redirect port",
            "format": "int64"
          },
          "redirectProtocol": {
            "type": "string",
            "description": "Station's redirect http protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirectQueryString": {
            "type": "string",
            "description": "Station's redirect query string"
          },
          "restEndpoint": {
            "type": "string",
            "description": "Endpoint to all the API REST of the EC"
          },
          "rtInstantaneousDispatch": {
            "type": "boolean",
            "description": "Station's instantaneous rt dispatch"
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "service4Mod": {
            "type": "string",
            "description": "Station's service 4"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetHostPof": {
            "type": "string",
            "description": "Station's target host POF"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPathPof": {
            "type": "string",
            "description": "Station's target path POF"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "targetPortPof": {
            "type": "integer",
            "description": "Station's target port POF",
            "format": "int64"
          },
          "threadNumber": {
            "type": "integer",
            "description": "Station's max thread number",
            "format": "int64"
          },
          "timeoutA": {
            "type": "integer",
            "description": "Station's timeoutA",
            "format": "int64"
          },
          "timeoutB": {
            "type": "integer",
            "description": "Station's timeoutB",
            "format": "int64"
          },
          "timeoutC": {
            "type": "integer",
            "description": "Station's timeoutC",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          },
          "wrapperStatus": {
            "type": "string",
            "description": "Station's status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          }
        }
      },
      "StationDetails": {
        "required": [
          "broker_code",
          "enabled",
          "flag_standin",
          "station_code",
          "thread_number",
          "timeout_a",
          "timeout_b",
          "timeout_c",
          "version"
        ],
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string"
          },
          "broker_description": {
            "type": "string"
          },
          "broker_details": {
            "$ref": "#/components/schemas/BrokerDetails"
          },
          "enabled": {
            "type": "boolean"
          },
          "flag_online": {
            "type": "boolean"
          },
          "flag_standin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "invio_rt_istantaneo": {
            "type": "boolean"
          },
          "ip": {
            "type": "string"
          },
          "ip_4mod": {
            "type": "string"
          },
          "is_connection_sync": {
            "type": "boolean",
            "readOnly": true
          },
          "is_payment_options_enabled": {
            "type": "boolean",
            "description": "Flag that enables EC's payment options service"
          },
          "new_password": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "pof_service": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int64"
          },
          "port_4mod": {
            "type": "integer",
            "format": "int64"
          },
          "primitive_version": {
            "type": "integer",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "protocol_4mod": {
            "type": "string",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "proxy_enabled": {
            "type": "boolean"
          },
          "proxy_host": {
            "type": "string"
          },
          "proxy_password": {
            "type": "string"
          },
          "proxy_port": {
            "type": "integer",
            "format": "int64"
          },
          "proxy_username": {
            "type": "string"
          },
          "redirect_ip": {
            "type": "string"
          },
          "redirect_path": {
            "type": "string"
          },
          "redirect_port": {
            "type": "integer",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirect_query_string": {
            "type": "string"
          },
          "rest_endpoint": {
            "type": "string",
            "description": "Endpoint to all the API REST of the EC"
          },
          "service": {
            "type": "string"
          },
          "service_4mod": {
            "type": "string"
          },
          "station_code": {
            "type": "string"
          },
          "target_host": {
            "type": "string"
          },
          "target_host_pof": {
            "type": "string"
          },
          "target_path": {
            "type": "string"
          },
          "target_path_pof": {
            "type": "string"
          },
          "target_port": {
            "type": "integer",
            "format": "int64"
          },
          "target_port_pof": {
            "type": "integer",
            "format": "int64"
          },
          "thread_number": {
            "type": "integer",
            "format": "int64"
          },
          "timeout_a": {
            "type": "integer",
            "format": "int64"
          },
          "timeout_b": {
            "type": "integer",
            "format": "int64"
          },
          "timeout_c": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StationDetailsDto": {
        "required": [
          "brokerCode",
          "flagStandin",
          "primitiveVersion",
          "redirectIp",
          "redirectPath",
          "redirectPort",
          "redirectProtocol",
          "redirectQueryString",
          "stationCode",
          "validationUrl",
          "version"
        ],
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string",
            "description": "Station's broker code"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "brokerObjId": {
            "type": "integer",
            "description": "Station's broker object id",
            "format": "int64"
          },
          "ec_email": {
            "type": "string",
            "description": " email of the ec"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state"
          },
          "flagOnline": {
            "type": "boolean",
            "description": "Station's online flag"
          },
          "flagStandin": {
            "type": "boolean"
          },
          "ip": {
            "type": "string",
            "description": "Station's ip address"
          },
          "ip4Mod": {
            "type": "string",
            "description": "Station's ip v4"
          },
          "isPaymentOptionsEnabled": {
            "type": "boolean",
            "description": "Flag that enables EC's payment options service"
          },
          "newPassword": {
            "type": "string",
            "description": "Station's new password"
          },
          "note": {
            "type": "string",
            "description": "station note description by operation team"
          },
          "password": {
            "type": "string",
            "description": "Station's password"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "port": {
            "type": "integer",
            "description": "Station's port",
            "format": "int64"
          },
          "port4Mod": {
            "type": "integer",
            "description": "Station's v4 port",
            "format": "int64"
          },
          "primitiveVersion": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "description": "Station's primitive version",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "description": "Station's http protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "protocol4Mod": {
            "type": "string",
            "description": "Station's protocol v4",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "proxyEnabled": {
            "type": "boolean",
            "description": "Station's proxy enabled variable"
          },
          "proxyHost": {
            "type": "string",
            "description": "Station's proxy host"
          },
          "proxyPassword": {
            "type": "string",
            "description": "Station's proxy password"
          },
          "proxyPort": {
            "type": "integer",
            "description": "Station's proxy port",
            "format": "int64"
          },
          "proxyUsername": {
            "type": "string",
            "description": "Station's proxy username"
          },
          "redirectIp": {
            "type": "string",
            "description": "Station's redirect Ip"
          },
          "redirectPath": {
            "type": "string",
            "description": "Station's redirect path"
          },
          "redirectPort": {
            "type": "integer",
            "description": "Station's redirect port",
            "format": "int64"
          },
          "redirectProtocol": {
            "type": "string",
            "description": "Station's redirect http protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirectQueryString": {
            "type": "string",
            "description": "Station's redirect query string"
          },
          "restEndpoint": {
            "type": "string",
            "description": "Endpoint to all the API REST of the EC"
          },
          "rtInstantaneousDispatch": {
            "type": "boolean",
            "description": "Station's instantaneous rt dispatch"
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "service4Mod": {
            "type": "string",
            "description": "Station's service 4"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "status": {
            "type": "string",
            "description": "Station's status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetHostPof": {
            "type": "string",
            "description": "Station's target host POF"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPathPof": {
            "type": "string",
            "description": "Station's target path POF"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "targetPortPof": {
            "type": "integer",
            "description": "Station's target port POF",
            "format": "int64"
          },
          "threadNumber": {
            "type": "integer",
            "description": "Station's max thread number",
            "format": "int64"
          },
          "timeoutA": {
            "type": "integer",
            "description": "Station's timeoutA",
            "format": "int64"
          },
          "timeoutB": {
            "type": "integer",
            "description": "Station's timeoutB",
            "format": "int64"
          },
          "timeoutC": {
            "type": "integer",
            "description": "Station's timeoutC",
            "format": "int64"
          },
          "validationUrl": {
            "type": "string",
            "description": "Url jira for StationDetail validation"
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          }
        }
      },
      "StationDetailsResourceList": {
        "required": [
          "stations"
        ],
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "stations": {
            "type": "array",
            "description": "Object that contains List of ec stations",
            "items": {
              "$ref": "#/components/schemas/StationDetailResource"
            }
          }
        }
      },
      "StationMaintenanceListResource": {
        "required": [
          "page_info",
          "station_maintenance_list"
        ],
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "station_maintenance_list": {
            "type": "array",
            "description": "List of station's maintenance",
            "items": {
              "$ref": "#/components/schemas/StationMaintenanceResource"
            }
          }
        }
      },
      "StationMaintenanceResource": {
        "required": [
          "broker_code",
          "end_date_time",
          "maintenance_id",
          "stand_in",
          "start_date_time",
          "station_code"
        ],
        "type": "object",
        "properties": {
          "broker_code": {
            "type": "string",
            "description": "Code of the broker that owns the station"
          },
          "end_date_time": {
            "type": "string",
            "description": "The end date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          },
          "maintenance_id": {
            "type": "integer",
            "description": "Maintenance's id",
            "format": "int64"
          },
          "stand_in": {
            "type": "boolean",
            "description": "StandIn flag"
          },
          "start_date_time": {
            "type": "string",
            "description": "The start date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          },
          "station_code": {
            "type": "string",
            "description": "Code of the station subject of the maintenance"
          }
        }
      },
      "StationTestDto": {
        "required": [
          "hostPath",
          "hostPort",
          "hostUrl",
          "testStationType"
        ],
        "type": "object",
        "properties": {
          "hostPath": {
            "type": "string"
          },
          "hostPort": {
            "type": "integer",
            "format": "int32"
          },
          "hostProtocol": {
            "type": "string"
          },
          "hostUrl": {
            "type": "string"
          },
          "testStationType": {
            "type": "string",
            "enum": [
              "PA_VERIFY",
              "PA_INVIA_RT",
              "PA_REDIRECT"
            ]
          }
        }
      },
      "TavoloOpDto": {
        "required": [
          "email",
          "name",
          "referent",
          "taxCode",
          "telephone"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": " contact person's email address"
          },
          "name": {
            "type": "string",
            "description": "Psp"
          },
          "referent": {
            "type": "string",
            "description": "referent"
          },
          "taxCode": {
            "type": "string",
            "description": "Fiscal code"
          },
          "telephone": {
            "type": "string"
          }
        }
      },
      "TavoloOpOperations": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "referent": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        }
      },
      "TavoloOpResource": {
        "required": [
          "createdBy",
          "email",
          "modifiedAt",
          "modifiedBy",
          "name",
          "referent",
          "taxCode",
          "telephone"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "Date of insert",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "Person who made the change"
          },
          "email": {
            "type": "string",
            "description": "contact person's email address"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Date of update",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "person who made the change"
          },
          "name": {
            "type": "string",
            "description": "Psp"
          },
          "referent": {
            "type": "string",
            "description": "referent"
          },
          "taxCode": {
            "type": "string",
            "description": "Fiscal code"
          },
          "telephone": {
            "type": "string"
          }
        },
        "description": "Operative table"
      },
      "TavoloOpResourceList": {
        "required": [
          "tavoloOpResourceList"
        ],
        "type": "object",
        "properties": {
          "tavoloOpResourceList": {
            "type": "array",
            "description": "All Tavolo operativo details",
            "items": {
              "$ref": "#/components/schemas/TavoloOpResource"
            }
          }
        }
      },
      "Taxonomies": {
        "required": [
          "taxonomies"
        ],
        "type": "object",
        "properties": {
          "taxonomies": {
            "type": "array",
            "description": "List of taxonomy",
            "items": {
              "$ref": "#/components/schemas/Taxonomy"
            }
          }
        }
      },
      "Taxonomy": {
        "required": [
          "ci_type",
          "ci_type_code",
          "end_date",
          "legal_reason_collection",
          "macro_area_ci_progressive",
          "macro_area_description",
          "macro_area_name",
          "service_type",
          "service_type_code",
          "service_type_description",
          "specific_built_in_data",
          "start_date",
          "taxonomy_version"
        ],
        "type": "object",
        "properties": {
          "ci_type": {
            "type": "string",
            "description": "Creditor Institution type"
          },
          "ci_type_code": {
            "type": "string",
            "description": "Creditor institution type code"
          },
          "end_date": {
            "type": "string",
            "description": "End date of validity"
          },
          "legal_reason_collection": {
            "type": "string",
            "description": "Legal reason for collection"
          },
          "macro_area_ci_progressive": {
            "type": "string",
            "description": "Macro Area Progressive"
          },
          "macro_area_description": {
            "type": "string",
            "description": "Macro area description"
          },
          "macro_area_name": {
            "type": "string",
            "description": "Macro area name"
          },
          "service_type": {
            "type": "string",
            "description": "Service type"
          },
          "service_type_code": {
            "type": "string",
            "description": "Service type code"
          },
          "service_type_description": {
            "type": "string",
            "description": "Service description"
          },
          "specific_built_in_data": {
            "type": "string",
            "description": "Specific collection data"
          },
          "start_date": {
            "type": "string",
            "description": "Start date of validity"
          },
          "taxonomy_version": {
            "type": "string",
            "description": "Taxonomy version"
          }
        },
        "description": "List of taxonomy"
      },
      "TaxonomyGroup": {
        "type": "object",
        "properties": {
          "areas": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxonomyGroupArea"
            }
          },
          "ecType": {
            "type": "string"
          },
          "ecTypeCode": {
            "type": "string"
          }
        },
        "description": "List of taxonomy groups"
      },
      "TaxonomyGroupArea": {
        "type": "object",
        "properties": {
          "macroAreaDescription": {
            "type": "string"
          },
          "macroAreaEcProgressive": {
            "type": "string"
          },
          "macroAreaName": {
            "type": "string"
          }
        }
      },
      "TaxonomyGroups": {
        "required": [
          "taxonomyGroups"
        ],
        "type": "object",
        "properties": {
          "taxonomyGroups": {
            "type": "array",
            "description": "List of taxonomy groups",
            "items": {
              "$ref": "#/components/schemas/TaxonomyGroup"
            }
          }
        }
      },
      "TestStationResource": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "testResult": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "CERTIFICATE_ERROR",
              "ERROR"
            ]
          }
        }
      },
      "Touchpoint": {
        "type": "object",
        "properties": {
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Touchpoints": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "touchpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Touchpoint"
            }
          }
        }
      },
      "UpdateCreditorInstitutionDto": {
        "required": [
          "address",
          "businessName",
          "creditorInstitutionCode",
          "enabled",
          "pspPayment",
          "reportingFtp",
          "reportingZip"
        ],
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/CreditorInstitutionAddressDto"
          },
          "businessName": {
            "type": "string",
            "description": "Creditor Institution's business name"
          },
          "cbillCode": {
            "type": "string",
            "description": "Creditor Institution's interbank code"
          },
          "creditorInstitutionCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Creditor Institution's code(Fiscal Code)"
          },
          "enabled": {
            "type": "boolean",
            "description": "Creditor Institution activation state on ApiConfig"
          },
          "pspPayment": {
            "type": "boolean",
            "description": "Creditor Institution's is a psp Payment broker"
          },
          "reportingFtp": {
            "type": "boolean",
            "description": "Enables flow towards Creditor Institution in fstp mode"
          },
          "reportingZip": {
            "type": "boolean",
            "description": "Enables the zipping of the content that goes through fstp"
          }
        }
      },
      "UpdateStationMaintenance": {
        "required": [
          "end_date_time"
        ],
        "type": "object",
        "properties": {
          "end_date_time": {
            "type": "string",
            "description": "The end date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          },
          "stand_in": {
            "type": "boolean",
            "description": "StandIn flag"
          },
          "start_date_time": {
            "type": "string",
            "description": "The start date time of the station maintenance",
            "format": "date-time",
            "example": "2024-04-01T13:00:00+02:00"
          }
        }
      },
      "UserProductRole": {
        "required": [
          "product_role"
        ],
        "type": "object",
        "properties": {
          "product_role": {
            "pattern": "admin|operator|admin-psp|operator-psp",
            "type": "string",
            "description": "Logged user role on product",
            "enum": [
              "admin, operator, admin-psp, operator-psp"
            ]
          },
          "product_role_label": {
            "type": "string",
            "description": "Logged user role label"
          }
        },
        "description": "Logged user's roles on product"
      },
      "WfespPluginConf": {
        "required": [
          "id_serv_plugin"
        ],
        "type": "object",
        "properties": {
          "id_bean": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "id_serv_plugin": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "pag_const_string_profile": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string"
          },
          "pag_rpt_xpath_profile": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string"
          },
          "pag_soap_rule_profile": {
            "maxLength": 150,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "WfespPluginConfs": {
        "required": [
          "wfesp_plugin_confs"
        ],
        "type": "object",
        "properties": {
          "wfesp_plugin_confs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WfespPluginConf"
            }
          }
        }
      },
      "WrapperChannelDetailsDto": {
        "required": [
          "broker_description",
          "broker_psp_code",
          "channel_code",
          "flag_standin",
          "payment_types",
          "redirect_protocol",
          "target_host",
          "target_path",
          "target_port",
          "validationUrl"
        ],
        "type": "object",
        "properties": {
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "broker_psp_code": {
            "type": "string",
            "description": " psp code"
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "flag_standin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "note": {
            "type": "string",
            "description": "channel note description by operation team"
          },
          "payment_types": {
            "type": "array",
            "description": " List of payment types",
            "items": {
              "type": "string",
              "description": " List of payment types"
            }
          },
          "redirect_ip": {
            "type": "string",
            "description": " redirect ip"
          },
          "redirect_path": {
            "type": "string",
            "description": " redirect path"
          },
          "redirect_port": {
            "type": "integer",
            "description": " redirect port",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "description": " redirect protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirect_query_string": {
            "type": "string",
            "description": " redirect query string"
          },
          "status": {
            "type": "string",
            "description": "channel's validation status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "target_host": {
            "type": "string",
            "description": " target host"
          },
          "target_path": {
            "type": "string",
            "description": " target path's"
          },
          "target_port": {
            "type": "integer",
            "description": " target port",
            "format": "int64"
          },
          "validationUrl": {
            "type": "string",
            "description": "Url jira for ChannelDetail validation"
          }
        }
      },
      "WrapperChannelResource": {
        "required": [
          "channel_code",
          "wrapperStatus"
        ],
        "type": "object",
        "properties": {
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "createdAt": {
            "type": "string",
            "description": " creation date",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "flagStandin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "modifiedAt": {
            "type": "string",
            "description": " modification date",
            "format": "date-time"
          },
          "primitive_version": {
            "type": "integer",
            "description": "Primitive number version",
            "format": "int32"
          },
          "wrapperStatus": {
            "type": "string",
            "description": "channel's validation status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          }
        },
        "description": "list of psp and ec channels"
      },
      "WrapperChannelsResource": {
        "required": [
          "channels",
          "page_info"
        ],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "list of psp and ec channels",
            "items": {
              "$ref": "#/components/schemas/WrapperChannelResource"
            }
          },
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "WrapperEntities": {
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WrapperEntityObject"
            }
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByOpt": {
            "type": "string"
          },
          "new": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CHANNEL",
              "STATION"
            ]
          }
        }
      },
      "WrapperEntitiesList": {
        "required": [
          "page_info",
          "wrapper_entities"
        ],
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "wrapper_entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WrapperEntitiesObject"
            }
          }
        }
      },
      "WrapperEntitiesObject": {
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WrapperEntityObject"
            }
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByOpt": {
            "type": "string"
          },
          "new": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CHANNEL",
              "STATION"
            ]
          }
        }
      },
      "WrapperEntityObject": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "entity": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByOpt": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CHANNEL",
              "STATION"
            ]
          }
        }
      },
      "WrapperEntityStation": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "entity": {
            "$ref": "#/components/schemas/StationDetails"
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByOpt": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CHANNEL",
              "STATION"
            ]
          }
        }
      },
      "WrapperEntityStations": {
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WrapperEntityStation"
            }
          },
          "id": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedByOpt": {
            "type": "string"
          },
          "new": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "CHANNEL",
              "STATION"
            ]
          }
        }
      },
      "WrapperStationDetailsDto": {
        "required": [
          "primitiveVersion",
          "redirectIp",
          "redirectPath",
          "redirectPort",
          "redirectProtocol",
          "redirectQueryString",
          "stationCode",
          "validationUrl"
        ],
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string",
            "description": "Station's broker code"
          },
          "broker_description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state"
          },
          "flagStandin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "isPaymentOptionsEnabled": {
            "type": "boolean",
            "description": "Flag that enables EC's payment options service"
          },
          "note": {
            "type": "string",
            "description": "station note description by operation team"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "primitiveVersion": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "description": "Station's primitive version",
            "format": "int32"
          },
          "redirectIp": {
            "type": "string",
            "description": "Station's redirect Ip"
          },
          "redirectPath": {
            "type": "string",
            "description": "Station's redirect path"
          },
          "redirectPort": {
            "type": "integer",
            "description": "Station's redirect port",
            "format": "int64"
          },
          "redirectProtocol": {
            "type": "string",
            "description": "Station's redirect http protocol",
            "enum": [
              "HTTPS",
              "HTTP"
            ]
          },
          "redirectQueryString": {
            "type": "string",
            "description": "Station's redirect query string"
          },
          "restEndpoint": {
            "type": "string",
            "description": "Endpoint to all the API REST of the EC"
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "status": {
            "type": "string",
            "description": "Station's status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetHostPof": {
            "type": "string",
            "description": "Station's target host POF"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPathPof": {
            "type": "string",
            "description": "Station's target path POF"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "targetPortPof": {
            "type": "integer",
            "description": "Station's target port POF",
            "format": "int64"
          },
          "validationUrl": {
            "type": "string",
            "description": "Url jira for StationDetail validation"
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          }
        }
      },
      "WrapperStationResource": {
        "required": [
          "associatedCreditorInstitutions",
          "enabled",
          "stationCode",
          "version",
          "wrapperStatus"
        ],
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "description": "Station's activation date",
            "format": "date-time"
          },
          "associatedCreditorInstitutions": {
            "type": "integer",
            "description": "Number of station's creditor institutions",
            "format": "int32"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "createdAt": {
            "type": "string",
            "description": "Station created on",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean",
            "description": "Describe if the station is active"
          },
          "flagStandin": {
            "type": "boolean",
            "description": "Represents the authorization to use the standin mode with this station"
          },
          "isConnectionSync": {
            "type": "boolean",
            "description": "Describe the station connection's type, true synchronous, false asynchronous"
          },
          "isPaymentOptionsEnabled": {
            "type": "boolean",
            "description": "Flag that enables EC's payment options service"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Station's last modified date",
            "format": "date-time"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "restEndpoint": {
            "type": "string",
            "description": "Endpoint to all the API REST of the EC"
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetHostPof": {
            "type": "string",
            "description": "Station's target host POF"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPathPof": {
            "type": "string",
            "description": "Station's target path POF"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "targetPortPof": {
            "type": "integer",
            "description": "Station's target port POF",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          },
          "wrapperStatus": {
            "type": "string",
            "description": "Station's status",
            "enum": [
              "APPROVED",
              "TO_CHECK",
              "TO_FIX",
              "TO_CHECK_UPDATE",
              "TO_FIX_UPDATE"
            ]
          }
        },
        "description": "List of creditor institution's stations"
      },
      "WrapperStationsResource": {
        "required": [
          "pageInfo",
          "stationsList"
        ],
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "stationsList": {
            "type": "array",
            "description": "List of creditor institution's stations",
            "items": {
              "$ref": "#/components/schemas/WrapperStationResource"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "bearerFormat": "JWT",
        "description": "JWT token get after Login",
        "scheme": "bearer",
        "type": "http"
      },
      "SubKey": {
        "description": "The Azure Subscription Key to access this API.",
        "in": "header",
        "name": "Ocp-Apim-Subscription-Key",
        "type": "apiKey"
      }
    }
  }
}
